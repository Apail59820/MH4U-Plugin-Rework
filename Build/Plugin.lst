00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
0000000c 00000001 b __tls_guard
00000010 00000010 B CTRPluginFramework::PrivColor::_clampArea
00000020 00000001 B CTRPluginFramework::PrivColor::_useClamp
00000024 00000008 B CTRPluginFramework::Renderer::_rendererContext
07000100 A __start__
07000100 T _start
07000104 T __service_ptr
07000108 t startup
07000128 t ClearMem
0700013c t ClrLoop
07000154 T _init
0700016c T initLib
0700018c T __ctru_exit
07000198 t .udivsi3_skip_div0_test
07000198 T __aeabi_uidiv
07000198 000001ec T __udivsi3
07000384 00000020 T __aeabi_uidivmod
070003a4 T __aeabi_idiv
070003a4 00000220 T __divsi3
070003ac t .divsi3_skip_div0_test
070005c4 00000020 T __aeabi_idivmod
070005e4 00000004 W __aeabi_idiv0
070005e4 00000004 W __aeabi_ldiv0
070005e8 0000019c T __aeabi_frsub
070005f0 00000194 T __aeabi_fsub
070005f0 00000194 T __subsf3
070005f4 00000190 T __addsf3
070005f4 00000190 T __aeabi_fadd
07000784 00000028 T __aeabi_ui2f
07000784 00000028 T __floatunsisf
0700078c 00000020 T __aeabi_i2f
0700078c 00000020 T __floatsisf
070007ac 0000008c T __aeabi_ul2f
070007ac 0000008c T __floatundisf
070007bc 0000007c T __aeabi_l2f
070007bc 0000007c T __floatdisf
07000838 T __aeabi_ldivmod
0700090c 00000014 T __restore_core_regs
0700090c 00000014 T restore_core_regs
07000920 T __gnu_Unwind_Restore_VFP
07000928 T __gnu_Unwind_Save_VFP
07000930 T __gnu_Unwind_Restore_VFP_D
07000938 T __gnu_Unwind_Save_VFP_D
07000940 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000948 T __gnu_Unwind_Save_VFP_D_16_to_31
07000950 T __gnu_Unwind_Restore_WMMXD
07000994 T __gnu_Unwind_Save_WMMXD
070009d8 T __gnu_Unwind_Restore_WMMXC
070009ec T __gnu_Unwind_Save_WMMXC
07000a00 00000024 T ___Unwind_RaiseException
07000a00 00000024 T _Unwind_RaiseException
07000a24 00000024 T ___Unwind_Resume
07000a24 00000024 T _Unwind_Resume
07000a48 00000024 T ___Unwind_Resume_or_Rethrow
07000a48 00000024 T _Unwind_Resume_or_Rethrow
07000a6c 00000024 T ___Unwind_ForcedUnwind
07000a6c 00000024 T _Unwind_ForcedUnwind
07000a90 00000024 T ___Unwind_Backtrace
07000a90 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_drsub
07000e58 000002b0 T __aeabi_dsub
07000e58 000002b0 T __subdf3
07000e5c 000002ac T __adddf3
07000e5c 000002ac T __aeabi_dadd
07001108 00000024 T __aeabi_ui2d
07001108 00000024 T __floatunsidf
0700112c 00000028 T __aeabi_i2d
0700112c 00000028 T __floatsidf
07001154 00000048 T __aeabi_f2d
07001154 00000048 T __extendsfdf2
0700119c 00000074 T __aeabi_ul2d
0700119c 00000074 T __floatundidf
070011b0 00000060 T __aeabi_l2d
070011b0 00000060 T __floatdidf
07001210 T __aeabi_uldivmod
0700124c t __do_global_dtors_aux
0700128c t frame_dummy
070012b8 00000018 t __tcf_0
070012d0 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07001354 0000005c T CTRPluginFramework::InitMenu(CTRPluginFramework::PluginMenu&)
070013b0 000000ac T CTRPluginFramework::main()
0700145c 000000e4 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
07001540 000001e0 t CTRPluginFramework::ToggleTouchscreenForceOn()
07001720 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
07001724 T svcCustomBackdoor
0700172c T svcConvertVAToPA
07001734 T svcFlushDataCacheRange
0700173c T svcInvalidateEntireInstructionCache
07001744 T svcMapProcessMemoryEx
07001758 T svcUnmapProcessMemoryEx
07001760 T svcControlProcess
07001768 00000244 t CTRPluginFramework::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned long, CTRPluginFramework::Screenshot::ImageBuffer*)
070019ac 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07001a04 00000020 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
07001a24 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)
07001a4c 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
07001aac 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_move(char*, char const*, unsigned int)
07001ad4 000000b8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
07001b8c 0000008c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
07001c18 00000280 T CTRPluginFramework::Screenshot::TaskCallback(void*)
07001e98 00000178 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
07002010 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07002094 00000378 T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
0700240c 00000238 T CTRPluginFramework::Screenshot::UpdateFileCount()
07002644 00000048 T CTRPluginFramework::Screenshot::Initialize()
0700268c 0000006c t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
070026f8 0000007c t _GLOBAL__sub_D__ZN18CTRPluginFramework10Screenshot9IsEnabledE
07002774 000000ac T CTRPluginFramework::SystemImpl::Initialize()
07002820 00000050 T CTRPluginFramework::SystemImpl::CheckCitra()
07002870 00000018 T CTRPluginFramework::SystemImpl::WantsToSleep()
07002888 0000001c T CTRPluginFramework::SystemImpl::IsSleeping()
070028a4 0000003c T CTRPluginFramework::SystemImpl::ReadyToSleep()
070028e0 00000020 T CTRPluginFramework::SystemImpl::WakeUpFromSleep()
07002900 00000044 T CTRPluginFramework::SystemImpl::Status()
07002944 00000024 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormat)
07002968 0000006c T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
07002968 0000006c T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
070029d4 00000100 T CTRPluginFramework::ScreenImpl::Initialize()
07002ad4 00000050 T CTRPluginFramework::ScreenImpl::ApplyCtrpfScreens()
07002b24 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float)
07002c04 0000005c T CTRPluginFramework::ScreenImpl::ImportFromGsp()
07002c60 00000028 T CTRPluginFramework::ScreenImpl::Release()
07002c88 00000070 T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
07002cf8 00000040 T CTRPluginFramework::ScreenImpl::Flush()
07002d38 00000094 T CTRPluginFramework::ScreenImpl::Clear(bool)
07002dcc 00000030 T CTRPluginFramework::ScreenImpl::Copy()
07002dfc 000000cc T CTRPluginFramework::ScreenImpl::Acquire(bool)
07002ec8 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
07002ed0 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
07002f30 00000050 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
07002f80 0000003c T CTRPluginFramework::ScreenImpl::Clean()
07002fbc 0000008c T CTRPluginFramework::ScreenImpl::SwitchFrameBuffers(bool)
07003048 00000070 T CTRPluginFramework::ScreenImpl::AcquireFromGsp(bool)
070030b8 00000030 T CTRPluginFramework::ScreenImpl::CheckGspFrameBuffersInfo()
070030e8 00000060 T CTRPluginFramework::ScreenImpl::SwapBuffer()
07003148 00000014 T CTRPluginFramework::ScreenImpl::SwapBufferInternal()
0700315c 0000001c T CTRPluginFramework::ScreenImpl::GetBacklight()
07003178 0000001c T CTRPluginFramework::ScreenImpl::SetBacklight(unsigned long)
07003194 00000008 T CTRPluginFramework::ScreenImpl::GetFormat() const
0700319c 00000008 T CTRPluginFramework::ScreenImpl::GetStride() const
070031a4 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel() const
070031ac 0000001c T CTRPluginFramework::ScreenImpl::GetFrameBufferInfos(int&, int&, GSPGPU_FramebufferFormat&) const
070031c8 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(bool)
070031e4 0000005c T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(int, int)
07003240 0000002c T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(bool)
0700326c 00000054 T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(int, int)
070032c0 0000005c T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
0700331c 00000084 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
070033a0 00000180 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
07003520 000001f4 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07003714 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
070037b4 000001ec T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
070039a0 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
070039d0 00000020 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
070039f0 00000020 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
07003a10 0000002c T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
07003a3c 00000034 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
07003a70 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
07003a98 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
07003ac0 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
07003ae0 00000030 T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
07003b10 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
07003b58 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
07003b9c 00000144 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormat)
07003ce0 0000002c T CTRPluginFramework::PrivColor::UseClamp(bool)
07003d0c 00000074 W CTRPluginFramework::Rect<int>::Contains(int, int) const
07003d80 00000040 t __tls_init
07003d80 00000040 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
07003dc0 0000004c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
07003e0c 0000009c T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
07003ea8 00000094 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
07003f3c 000000b0 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
07003fec 000000bc T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
070040a8 000000b8 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
07004160 00000018 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
07004178 00000038 W CTRPluginFramework::File::~File()
07004178 00000038 W CTRPluginFramework::File::~File()
070041b0 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
070041d4 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
070041f8 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
070041f8 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
07004230 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
07004238 00000008 T CTRPluginFramework::BMPImage::Width() const
07004240 00000008 T CTRPluginFramework::BMPImage::Height() const
07004248 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
07004250 00000010 T CTRPluginFramework::BMPImage::data() const
07004260 0000001c T CTRPluginFramework::BMPImage::end() const
0700427c 00000014 W CTRPluginFramework::BMPImage::DataClear()
07004290 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
07004290 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
0700431c 00000034 T CTRPluginFramework::BMPImage::Unload()
07004350 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
07004398 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
070043c8 000000d0 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
07004498 0000006c T CTRPluginFramework::BMPImage::_CreateBitmap()
07004504 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
07004528 0000011c T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
07004644 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07004644 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07004698 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
07004698 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
07004708 000001d8 T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
070048e0 0000012c T CTRPluginFramework::BMPImage::OptimiseForRendering()
07004a0c 000000c8 T CTRPluginFramework::BMPImage::Draw(int, int)
07004ad4 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
07004adc 000000f0 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
07004bcc 00000318 T CTRPluginFramework::BMPImage::_LoadBitmap()
07004ee4 000000b0 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07004ee4 000000b0 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07004f94 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
07004fe0 000002c8 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
070052a8 000000c4 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
0700536c 0000014c T CTRPluginFramework::Renderer::EndFrame(bool)
070054b8 00000094 T CTRPluginFramework::OSDImpl::DrawNotif_TaskFunc(void*)
0700554c 00000064 t CTRPluginFramework::GetBuffer(unsigned long)
070055b0 000000ac t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.0]
0700565c 00000030 t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long) [clone .constprop.0]
0700568c 0000016c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)::{lambda(bool (*)(CTRPluginFramework::Screen const&))#1}>::operator()<__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > > >(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >) [clone .isra.0]
070057f8 00000058 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::Update()::{lambda(CTRPluginFramework::OSDImpl::OSDMessage*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >) [clone .isra.0]
07005850 0000012c T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07005850 0000012c T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700597c 000000e0 T CTRPluginFramework::OSDImpl::UpdateScreens()
07005a5c 000000d0 T CTRPluginFramework::InstallOSD()
07005b2c 000000ac T CTRPluginFramework::OSDImpl::_Initialize()
07005bd8 00000064 W std::__shared_count<(__gnu_cxx::_Lock_policy)0>::~__shared_count()
07005bd8 00000064 W std::__shared_count<(__gnu_cxx::_Lock_policy)0>::~__shared_count()
07005c3c 00000028 W std::_Vector_base<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~_Vector_base()
07005c3c 00000028 W std::_Vector_base<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~_Vector_base()
07005c64 00000008 W __gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > std::next<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, std::iterator_traits<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >::difference_type)
07005c6c 000000b4 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
07005d20 000001a4 T CTRPluginFramework::OSDImpl::Update()
07005ec4 00000058 T CTRPluginFramework::OSDImpl::OnTopScreenFrame()
07005f1c 000000c8 T CTRPluginFramework::OSDImpl::OnBottomScreenFrame()
07005fe4 000005ec T CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)
070065d0 0000008c T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
0700665c 00000094 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
070066f0 00000070 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
07006760 0000012c T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0700688c 00000120 T CTRPluginFramework::Renderer::GetTextSize(char const*)
070069ac 000001a4 T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
07006b50 000001cc T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
07006d1c 00000064 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
07006d80 0000023c T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color, unsigned long)
07006fbc 000005a4 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int, unsigned long)
07007560 00000484 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*, unsigned long)
070079e4 00000074 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
07007a58 00000070 T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
07007ac8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07007b20 0000002c T CTRPluginFramework::GetRatio(int, int, int, int)
07007b4c 00000108 T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
07007c54 0000009c T CTRPluginFramework::Preferences::LoadBackgrounds()
07007cf0 00000060 T CTRPluginFramework::Preferences::ApplyBacklight()
07007d50 00000004 T CTRPluginFramework::Preferences::Initialize()
07007d54 00000200 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV11&)
07007f54 000000bc T CTRPluginFramework::Preferences::LoadSettings()
07008010 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0700806c 000000bc T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
07008128 000000bc T CTRPluginFramework::Preferences::LoadSavedFavorites()
070081e4 00000160 T CTRPluginFramework::Preferences::WriteSettings()
07008344 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008344 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070083b0 000000a0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*) [clone .isra.0]
07008450 00000208 t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
07008658 000000f0 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
07008748 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
07008774 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070087cc 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0700880c 000000c0 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070088cc 00000054 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07008920 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
07008958 0000005c T CTRPluginFramework::InitializeRandomEngine()
070089b4 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07008a34 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
07008a90 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07008aec 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
07008b30 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
07008b8c 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
07008c0c 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
07008c80 00000050 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
07008cd0 00000124 T CTRPluginFramework::Utils::ConvertUTF16ToUTF8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned short const*)
07008df4 00000040 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008e34 0000025c t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07009090 00000050 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
07009090 00000050 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
070090e0 00000024 W std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> >::_M_dispose()
07009104 0000008c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009190 00000174 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
07009304 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07009338 00000140 T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07009478 0000075c t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07009bd4 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009bdc 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07009c20 000000c8 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::_M_gen_rand()
07009ce8 00000054 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
07009d3c 00000080 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
07009dbc 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
07009dd8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07009e30 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07009e30 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07009e94 0000001c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
07009eb0 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07009f10 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
07009f6c 00000024 T CTRPluginFramework::ResetColor[abi:cxx11]()
07009f90 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009fb4 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07009fd8 000000a4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0700a07c 00000080 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .constprop.0]
0700a0fc 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700a154 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
0700a198 00000048 T CTRPluginFramework::Directory::Close() const
0700a1e0 00000008 T CTRPluginFramework::Directory::IsOpen() const
0700a1e8 00000040 T CTRPluginFramework::Directory::Directory()
0700a1e8 00000040 T CTRPluginFramework::Directory::Directory()
0700a228 00000028 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
0700a228 00000028 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
0700a250 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
0700a284 0000007c T CTRPluginFramework::Directory::~Directory()
0700a284 0000007c T CTRPluginFramework::Directory::~Directory()
0700a300 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0700a360 0000004c T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, char const*)
0700a360 0000004c T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, char const*)
0700a3ac 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
0700a3c0 000000a0 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a460 000000a4 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a504 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a5d8 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a66c 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0700a714 0000000c t CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&) [clone .isra.0]
0700a720 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
0700a7b0 00000118 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a8c8 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a904 000000e8 T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a9ec 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700ab38 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700ab38 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700ab90 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
0700ab90 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
0700abac 0000011c t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
0700acc8 00000084 t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&)
0700ad4c 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
0700adb4 000000b4 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
0700ae68 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
0700aeac 000001ec t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
0700b098 00000288 T CTRPluginFramework::Directory::_List() const
0700b320 000000d4 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700b3f4 000000dc T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700b4d0 0000000c T CTRPluginFramework::FwkSettings::Get()
0700b4dc 000000cc T CTRPluginFramework::FwkSettings::SetThemeDefault()
0700b5a8 00000010 T CTRPluginFramework::Process::GetHandle()
0700b5b8 00000010 T CTRPluginFramework::Process::GetTitleID()
0700b5c8 00000024 T CTRPluginFramework::Process::GetTextSize()
0700b5ec 00000008 T CTRPluginFramework::Process::Pause()
0700b5f4 00000010 T CTRPluginFramework::Process::Play(unsigned long)
0700b604 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
0700b6ac 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
0700b6b0 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
0700b6fc 00000020 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
0700b71c 00000020 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
0700b73c 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
0700b75c 00000024 T CTRPluginFramework::Process::ReturnToHomeMenu()
0700b780 000000f8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
0700b878 00000064 T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700b8dc 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700b914 0000000c T CTRPluginFramework::HookContext::GetCurrent()
0700b920 00000028 T CTRPluginFramework::HookContext::GetCallCode()
0700b948 00000048 T CTRPluginFramework::Hook::Hook()
0700b948 00000048 T CTRPluginFramework::Hook::Hook()
0700b990 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
0700b990 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
0700b9b8 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
0700b9b8 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
0700b9cc 00000064 T CTRPluginFramework::Hook::operator=(CTRPluginFramework::Hook&&)
0700ba30 00000050 T CTRPluginFramework::Hook::~Hook()
0700ba30 00000050 T CTRPluginFramework::Hook::~Hook()
0700ba80 0000001c T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long)
0700ba9c 00000028 T CTRPluginFramework::Hook::InitializeForMitm(unsigned long, unsigned long)
0700bac4 00000010 T CTRPluginFramework::Hook::SetFlags(unsigned long)
0700bad4 0000001c T CTRPluginFramework::Hook::IsEnabled()
0700baf0 00000120 T CTRPluginFramework::Hook::Enable()
0700bc10 00000030 T CTRPluginFramework::Hook::Disable()
0700bc40 00000008 T CTRPluginFramework::Hook::GetContext() const
0700bc48 00000010 T CTRPluginFramework::System::IsNew3DS()
0700bc58 00000010 T CTRPluginFramework::System::Reboot()
0700bc68 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700bcc0 000000bc T CTRPluginFramework::File::Read(void*, unsigned long) const
0700bd7c 000000f4 T CTRPluginFramework::File::Write(void const*, unsigned long)
0700be70 000000d4 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
0700bf44 00000008 T CTRPluginFramework::File::Tell() const
0700bf4c 0000002c T CTRPluginFramework::File::Rewind() const
0700bf78 00000030 T CTRPluginFramework::File::Flush() const
0700bfa8 00000064 T CTRPluginFramework::File::GetSize() const
0700c00c 00000008 T CTRPluginFramework::File::IsOpen() const
0700c014 00000044 T CTRPluginFramework::File::File()
0700c014 00000044 T CTRPluginFramework::File::File()
0700c058 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
0700c0d0 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
0700c0e4 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c178 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c24c 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c2d0 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c370 000000a4 T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0700c414 0000006c T CTRPluginFramework::File::Close() const
0700c480 00000184 T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0700c604 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700c604 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700c660 00000028 T CTRPluginFramework::Touch::IsDown()
0700c688 00000028 T CTRPluginFramework::Touch::GetPosition()
0700c6b0 00000018 T CTRPluginFramework::Clock::Clock()
0700c6b0 00000018 T CTRPluginFramework::Clock::Clock()
0700c6c8 0000002c T CTRPluginFramework::Clock::GetElapsedTime() const
0700c6f4 00000038 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
0700c72c 00000034 T CTRPluginFramework::Clock::Restart()
0700c760 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
0700c760 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
0700c764 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>::_M_dispose()
0700c768 00000030 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>::_M_get_deleter(std::type_info const&)
0700c798 00000018 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
0700c7b0 00000008 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>::_M_destroy()
0700c7b8 00000050 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)0>::_M_release()
0700c808 00000034 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)0>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)0>&&) [clone .isra.0]
0700c83c 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
0700c83c 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
0700c8e8 00000048 T CTRPluginFramework::Task::Start() const
0700c930 0000004c T CTRPluginFramework::Task::Start(void*) const
0700c97c 00000064 T CTRPluginFramework::Task::Wait() const
0700c9e0 0000003c T CTRPluginFramework::Controller::Update()
0700ca1c 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
0700ca1c 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
0700ca90 00000048 T CTRPluginFramework::PluginMenu::Run() const
0700cad8 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
0700cae0 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
0700caf0 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
0700cafc 00000030 W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
0700cafc 00000030 W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
0700cb2c 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
0700cb2c 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
0700cb44 00000038 W CTRPluginFramework::TextBox::~TextBox()
0700cb44 00000038 W CTRPluginFramework::TextBox::~TextBox()
0700cb7c 00000020 W CTRPluginFramework::TextBox::~TextBox()
0700cb9c 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0700cb9c 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0700cbe4 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0700cbe4 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0700cc20 00000040 T CTRPluginFramework::MessageBox::~MessageBox()
0700cc20 00000040 T CTRPluginFramework::MessageBox::~MessageBox()
0700cc60 00000008 T CTRPluginFramework::MessageBox::operator()() const
0700cc68 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700ccc0 000000c0 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0700cd80 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700cd80 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700cdc8 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0700cdc8 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0700ce34 00000030 T CTRPluginFramework::Keyboard::~Keyboard()
0700ce34 00000030 T CTRPluginFramework::Keyboard::~Keyboard()
0700ce64 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
0700ce6c 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
0700ce88 00000044 T CTRPluginFramework::Keyboard::Open() const
0700cecc 00000098 T CTRPluginFramework::Keyboard::Open(float&) const
0700cf64 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
0700cf6c 00000008 T CTRPluginFramework::Keyboard::GetMessage[abi:cxx11]() const
0700cf74 00000008 T CTRPluginFramework::Keyboard::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)) const
0700cf7c 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0700d024 000000d0 T CTRPluginFramework::Keyboard::Open(float&, float) const
0700d0f4 00000074 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
0700d168 00000088 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700d1f0 000001f4 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
0700d3e4 000000a8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
0700d48c 00000090 T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0700d51c 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
0700d5e0 00000104 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
0700d6e4 00000090 T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0700d774 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
0700d838 00000104 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
0700d93c 00000090 T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0700d9cc 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
0700da90 00000104 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
0700db94 00000108 W void std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::_M_realloc_insert<CTRPluginFramework::OSDImpl::OSDMessage*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, CTRPluginFramework::OSDImpl::OSDMessage*&&)
0700dc9c 00000088 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700dd24 00000070 t std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned int, int const&, unsigned int) const [clone .isra.0]
0700dd94 0000001c W std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
0700ddb0 00000060 W std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(int const&)
0700de10 000000d0 T CTRPluginFramework::Render::PullRandomCharacter[abi:cxx11](int)
0700dee0 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
0700df18 00000064 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
0700df7c 00000110 T CTRPluginFramework::Color::Fade(float)
0700e08c 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
0700e0cc 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
0700e148 00000220 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
0700e368 000000c8 T OnSharedMemMap(unsigned long, void*, MemPerm, MemPerm)
0700e430 00000008 t CTRPluginFramework::KeepThreadMain(void*)::{lambda(void const*)#1}::_FUN(void const*)
0700e438 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700e490 0000005c t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
0700e4ec 00000018 W CTRPluginFramework::ProcessImpl::UserProcessEventCallback(CTRPluginFramework::Process::Event)
0700e504 00000028 T OnLoadCro
0700e52c 000000ac T CTRPluginFramework::ThreadExit()
0700e5d8 00000054 T abort
0700e62c 000000c8 T __entrypoint
0700e6f4 00000028 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0700e6f4 00000028 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0700e71c 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0700e79c 00000070 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
0700e80c 0000003c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0700e848 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*) [clone .isra.0]
0700e898 000006b8 T CTRPluginFramework::KeepThreadMain(void*)
0700ef50 00000120 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0700f070 000001d8 T CTRPluginFramework::Initialize()
0700f248 00000044 T CTRPluginFramework::ThreadInit(void*)
0700f28c 00000048 t _GLOBAL__sub_I_g_gspEventThreadPriority
0700f2d4 0000002c t _GLOBAL__sub_D_g_gspEventThreadPriority
0700f300 000000b8 t NCSNDCmd_Add
0700f3b8 00000084 t NCSNDCmd_Execute.constprop.0
0700f43c 0000005c T ncsndNotifyAptEvent
0700f498 00000004 t ncsndAptHook
0700f49c 000001cc T ncsndInit
0700f668 000000ac T ncsndExit
0700f714 00000024 T ncsndInitializeSound
0700f738 00000260 T ncsndPlaySound
0700f998 00000040 T ncsndStopSound
0700f9d8 00000090 T ncsndIsPlaying
0700fa68 T __aeabi_read_tp
0700fa74 T LoadCROHooked
0700fa88 T AR__ExecuteRoutine
0700fab0 t stackBak
0700fab8 00000020 T __libctru_exit
0700fad8 0000001c T __appExit
0700faf4 0000003c T __syscall_getreent
0700fb30 0000003c T __getThreadLocalStorage
0700fb6c 00000070 T __syscall_gettod_r
0700fbdc 00000004 T __syscall_lock_acquire
0700fbe0 00000004 T __syscall_lock_release
0700fbe4 00000004 T __syscall_lock_acquire_recursive
0700fbe8 00000004 T __syscall_lock_release_recursive
0700fbec 00000054 T initThreadVars
0700fc40 0000005c T __system_initSyscalls
0700fc9c 0000018c T __createThread
0700fe28 00000110 T __startThread
0700ff38 00000024 T threadGetHandle
0700ff5c 0000002c T threadFree
0700ff88 00000024 T threadJoin
0700ffac 00000020 T threadGetCurrent
0700ffcc 0000003c T threadExit
07010008 00000020 t _thread_begin
07010028 0000003c T fontEnsureMappedExtension
07010064 0000004c T hidInitFake
070100b0 0000003c T hidExitFake
070100ec 0000002c T hidSetSharedMem
07010118 00000070 T plgLdrExit
07010188 000000d4 T plgLdrInit
0701025c 00000050 T PLGLDR__GetPluginPath
070102ac 00000024 T PLGLDR__FetchEvent
070102d0 000000e8 T PLGLDR__Reply
070103b8 000000b0 T __system_allocateHeaps
07010468 0000002c t CTRPluginFrameworkImpl::Services::GSP::GSPGPU__RegisterInterruptHook()
07010494 00000028 t CTRPluginFrameworkImpl::Services::GSP::ClearInterrupts()
070104bc 00000154 t CTRPluginFrameworkImpl::Services::GSP::InterruptReceiver(void*)
07010610 00000080 t CTRPluginFrameworkImpl::Services::GSP::EnqueueEvent(signed char, bool)
07010690 00000028 t CTRPluginFrameworkImpl::Services::GSP::plgVAtoGameVa(unsigned long*)
070106b8 00000018 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
070106d0 0000005c t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
0701072c 000000d0 T CTRPluginFrameworkImpl::Services::GSP::Update(unsigned long, unsigned long, unsigned long)
070107fc 00000004 T __gsp__Update
07010800 00000294 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo::FillFrameBufferFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo&)
07010a94 00000018 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared::FillFrameBuffersFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&)
07010aac 00000020 T CTRPluginFrameworkImpl::Services::GSP::TriggerPSCEvents()
07010acc 00000048 T CTRPluginFrameworkImpl::Services::GSP::PauseInterruptReceiver()
07010b14 00000034 T CTRPluginFrameworkImpl::Services::GSP::ResumeInterruptReceiver()
07010b48 00000024 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank()
07010b6c 00000024 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank1()
07010b90 0000003c T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlankBoth()
07010bcc 0000002c T CTRPluginFrameworkImpl::Services::GSP::SwapBuffer(int)
07010bf8 000000a4 T CTRPluginFrameworkImpl::Services::GSP::WaitBufferSwapped(int)
07010c9c 00000034 T CTRPluginFrameworkImpl::Services::GSP::ImportFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int)
07010cd0 000000a8 T CTRPluginFrameworkImpl::Services::GSP::SetFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int, bool)
07010d78 00000198 T CTRPluginFrameworkImpl::Services::GSP::Initialize()
07010f10 0000003c t _GLOBAL__sub_I__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
07010f4c 00000020 t _GLOBAL__sub_D__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
07010f6c 00000020 t SetHookContextInTLS(CTRPluginFramework::HookContext*)
07010f8c 00000014 t decltype (::new ((void*)(0)) CTRPluginFramework::AsmWrapper()) std::construct_at<CTRPluginFramework::AsmWrapper>(CTRPluginFramework::AsmWrapper*) [clone .isra.0]
07010fa0 0000029c t GenerateAsm(CTRPluginFramework::AsmWrapper&, CTRPluginFramework::HookContext&)
0701123c 00000044 W CTRPluginFramework::Lock::~Lock()
0701123c 00000044 W CTRPluginFramework::Lock::~Lock()
07011280 000000d4 T CTRPluginFramework::HookManager::HookManager()
07011280 000000d4 T CTRPluginFramework::HookManager::HookManager()
07011354 00000074 T CTRPluginFramework::HookManager::GetFreeHookWrapper(long&)
070113c8 00000064 T CTRPluginFramework::HookManager::GetAsmWrapper(CTRPluginFramework::HookContext*)
0701142c 000000d0 T CTRPluginFramework::HookManager::DisableHook(CTRPluginFramework::HookContext&)
070114fc 0000000c T CTRPluginFramework::HookManager::Lock()
07011508 0000000c T CTRPluginFramework::HookManager::Unlock()
07011514 00000068 T CTRPluginFramework::HookManager::PrepareToUnmapMemory()
0701157c 00000078 T CTRPluginFramework::HookManager::RecoverFromUnmapMemory()
070115f8 000000c8 T __hook__CheckTlsValue
070116c0 00000144 W void std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> >::_M_realloc_insert<>(__gnu_cxx::__normal_iterator<CTRPluginFramework::AsmWrapper*, std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> > >)
07011804 00000084 T CTRPluginFramework::HookManager::GetFreeAsmWrapper()
07011888 0000015c T CTRPluginFramework::HookManager::ApplyHook(CTRPluginFramework::HookContext&)
070119e4 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11HookManager10_singletonE
070119f0 00000044 t _GLOBAL__sub_D__ZN18CTRPluginFramework11HookManager10_singletonE
07011a34 00000010 t std::__atomic_base<unsigned long>::operator=(unsigned long) [clone .isra.0]
07011a44 0000003c t std::__shared_count<(__gnu_cxx::_Lock_policy)0>::operator=(std::__shared_count<(__gnu_cxx::_Lock_policy)0> const&) [clone .isra.0]
07011a80 00000060 T CTRPluginFramework::Scheduler::Core::Core()
07011a80 00000060 T CTRPluginFramework::Scheduler::Core::Core()
07011ae0 00000058 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
07011b38 00000098 T CTRPluginFramework::Scheduler::Initialize()
07011bd0 0000004c T CTRPluginFramework::Scheduler::Exit()
07011c1c 00000040 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)0>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)0>&&) [clone .isra.0]
07011c5c 000001a4 T CTRPluginFramework::Scheduler::_PollTask(CTRPluginFramework::Scheduler::Core&)
07011e00 00000104 T CTRPluginFramework::Scheduler__CoreHandler(void*)
07011f04 00000148 W void std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > >::_M_realloc_insert<std::shared_ptr<CTRPluginFramework::TaskContext> const&>(__gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, std::shared_ptr<CTRPluginFramework::TaskContext> const&)
0701204c 00000174 T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
070121c0 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
07012204 00000088 t _GLOBAL__sub_D__ZN18CTRPluginFramework9Scheduler10_singletonE
0701228c 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
070122b0 00000004 t addrMapNodeDestructor(rbtree_node*)
070122b4 00000144 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
070123f8 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
07012400 0000006c T CTRPluginFramework::Heap::Free(void*)
0701246c 0000000c T CTRPluginFramework::Heap::SpaceFree()
07012478 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
07012484 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
070124a4 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070124fc 000002b4 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070127b0 00000030 W unsigned short* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned short>(unsigned short const*, unsigned short const*, unsigned short*)
070127e0 000001ac W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
0701298c 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0701298c 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07012a50 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
07012a80 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6FSPath7FSMutexE
07012ab4 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
07012ac0 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07012ad8 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07012b18 00000044 t KProcess::PatchMaxThreads()::{lambda(KProcess*, unsigned long)#1}::_FUN(KProcess*, unsigned long)
07012b5c 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
07012b6c 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
07012b80 00000004 T Kernel::Initialize()
07012b84 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
07012b9c 0000000c T KProcess::GetCurrent()
07012ba8 00000024 T KProcess::PatchCore2Access()
07012bcc 0000002c T KProcess::PatchCategory(unsigned long)
07012bf8 00000014 T KProcess__PatchCategory
07012c0c 0000002c T KProcess::PatchMaxPriority(unsigned long)
07012c38 00000014 T KProcess__PatchMaxPriority
07012c4c 00000028 T KProcess::PatchMaxThreads()
07012c74 0000004c t CTRPluginFramework::ThreadPredicate(KThread*)
07012cc0 00000094 T CTRPluginFramework::ProcessImpl::Play(bool)
07012d54 0000003c T CTRPluginFramework::ProcessImpl::LockGameThreads()
07012d90 00000038 T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
07012dc8 00000064 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
07012e2c 00000070 T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
07012e9c 00000094 T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
07012f30 000000a8 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
07012fd8 00000038 T CTRPluginFramework::ProcessImpl::EnableExceptionHandlers()
07013010 0000001c T CTRPluginFramework::ProcessImpl::DisableExceptionHandlers()
0701302c 00000038 T CTRPluginFramework::ProcessImpl::ReturnFromException(CpuRegisters*)
07013044 t _store_reg_loop
07013064 0000000c T CTRPluginFramework::ProcessImpl::SignalExit()
07013070 00000028 W std::_Vector_base<MemInfo, std::allocator<MemInfo> >::~_Vector_base()
07013070 00000028 W std::_Vector_base<MemInfo, std::allocator<MemInfo> >::~_Vector_base()
07013098 0000010c W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
070131a4 0000003c W std::vector<MemInfo, std::allocator<MemInfo> >::push_back(MemInfo const&)
070131e0 000000bc T CTRPluginFramework::ProcessImpl::UpdateMemRegions(bool)
0701329c 00000428 T CTRPluginFramework::ProcessImpl::Initialize()
070136c4 0000006c T CTRPluginFramework::ProcessImpl::Pause(bool)
07013730 000000e0 T CTRPluginFramework::ProcessImpl::ExceptionHandler(ERRF_ExceptionInfo*, CpuRegisters*)
07013810 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
0701381c 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
07013850 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
07013850 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
070138f0 00000050 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::pop_front()
07013940 00000038 T CTRPluginFramework::EventManager::Clear()
07013978 000001cc W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
07013b48 00000068 T CTRPluginFramework::EventManager::PushEvent(CTRPluginFramework::Event const&)
07013bb0 00000304 T CTRPluginFramework::EventManager::ProcessEvents()
07013eb8 000000cc T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
07013f84 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
07013f8c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07013fe4 00000008 T CTRPluginFramework::SoundEngineImpl::Initializelibcwav()
07013fec 00000004 T CTRPluginFramework::SoundEngineImpl::NotifyAptEvent(APT_HookType)
07013ff0 00000004 T CTRPluginFramework::SoundEngineImpl::SetVaToPaConvFunction(unsigned long (*)(void const*))
07013ff4 00000048 T CTRPluginFramework::SoundEngineImpl::RegisterMenuSoundEvent(CTRPluginFramework::SoundEngine::Event, CTRPluginFramework::Sound&)
0701403c 00000024 T CTRPluginFramework::SoundEngineImpl::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
07014060 00000044 T CTRPluginFramework::SoundEngineImpl::ClearMenuSounds()
070140a4 00000124 W std::vector<CTRPluginFramework::Sound, std::allocator<CTRPluginFramework::Sound> >::_M_default_append(unsigned int)
070141c8 00000214 T CTRPluginFramework::SoundEngineImpl::InitializeMenuSounds()
070143dc 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
070143e8 00000050 t _GLOBAL__sub_D__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
07014438 0000002c t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate(unsigned int) [clone .isra.0]
07014464 00000028 W CTRPluginFramework::Mutex::~Mutex()
07014464 00000028 W CTRPluginFramework::Mutex::~Mutex()
0701448c 00000108 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
0701448c 00000108 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
07014594 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
070145b4 00000190 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
07014744 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07014764 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
07014780 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
0701479c 00000010 T CTRPluginFramework::PluginMenuImpl::GetRunningInstance()
070147ac 00000008 T CTRPluginFramework::PluginMenuImpl::GetHexEditorState() const
070147b4 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
070147bc 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
070147c4 00000044 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
070147c4 00000044 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07014808 00000028 W std::_Vector_base<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::~_Vector_base()
07014808 00000028 W std::_Vector_base<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::~_Vector_base()
07014830 00000028 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::~_Vector_base()
07014830 00000028 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::~_Vector_base()
07014858 00000138 W __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > std::find<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (*)()>(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (* const&)())
07014990 0000003c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuImpl::Run()::{lambda(void (*)())#1}>::operator()<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > >(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >) [clone .isra.0]
070149cc 00000120 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
07014af0 0000077c T CTRPluginFramework::PluginMenuImpl::Run()
0701526c 00000058 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
070152c4 000000a4 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
07015368 00000104 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0701546c 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0701546c 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
070154d4 00000198 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
0701566c 00000120 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
0701578c 000001a4 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
07015930 00000048 W unsigned long* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned long*, unsigned int>(unsigned long*, unsigned int)
07015978 000000bc W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
07015a34 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
07015a70 00000134 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
07015ba4 00000140 T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
07015ce4 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
07015cf0 00000014 t _GLOBAL__sub_D__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
07015d04 0000014c W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07015d04 0000014c W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07015e50 000001c4 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07015e50 000001c4 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07016014 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
07016050 00000058 T CTRPluginFramework::Menu::CloseAll()
070160a8 00000030 T CTRPluginFramework::Menu::~Menu()
070160a8 00000030 T CTRPluginFramework::Menu::~Menu()
070160d8 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
070160e4 00000008 T CTRPluginFramework::Menu::GetFolder() const
070160ec 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
070160f4 00000044 T CTRPluginFramework::Menu::GetSelectedItem()
07016138 000003a4 T CTRPluginFramework::Menu::Draw() const
070164e0 000000a0 T CTRPluginFramework::Menu::_ScrollUp(int)
07016580 000000a0 T CTRPluginFramework::Menu::_ScrollDown(int)
07016620 00000244 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
07016868 0000016c T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
070169d4 00000068 T CTRPluginFramework::Menu::ShowNote()
07016a3c 00000008 T CTRPluginFramework::Menu::CloseNote()
07016a44 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
07016a4c 000000e4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07016a4c 000000e4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07016b30 00000128 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07016b30 00000128 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07016c58 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
07016c98 00000044 T CTRPluginFramework::Menu::Pop()
07016cdc 00000108 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
07016de4 000000a8 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
07016e8c 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
07016e94 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
07016e94 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
07016ec4 00000020 W CTRPluginFramework::MenuItem::~MenuItem()
07016ee4 000000e4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07016ee4 000000e4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07016fc8 00000020 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07016fe8 00000010 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
07016ff8 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
07017048 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](unsigned long)
07017060 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
07017084 000000b0 T CTRPluginFramework::MenuFolderImpl::Clear()
07017134 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
07017144 00000020 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
07017164 00000058 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
070171bc 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070171bc 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017290 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
070172a0 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
070172b0 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
070172c0 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
07017318 000000c0 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
070173d8 000000ec t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
070174c4 00000064 t __tcf_0
07017528 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07017580 00000328 T CTRPluginFramework::PluginMenuHome::_RenderTop()
070178a8 00000134 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
070179e0 00000498 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
07017e78 0000011c T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
07017f94 00000090 T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
07018024 00000038 T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
0701805c 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
07018088 000000d4 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
0701815c 00000084 T CTRPluginFramework::PluginMenuHome::_StarItem()
070181e0 000000a4 T CTRPluginFramework::PluginMenuHome::Init()
07018284 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
070182e0 000000c0 T CTRPluginFramework::PluginMenuHome::UpdateNote()
070183a0 000004ac T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070183a0 000004ac T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0701884c 000001b0 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
070189fc 00000050 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07018a4c 00000088 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
07018ad8 000003ac T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
07018e84 00000224 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
070190a8 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
070190bc 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
070190d0 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
070190e4 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
070190e8 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
070190ec 00000028 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
07019114 00000064 t __tcf_0
07019178 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070191d0 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07019210 00000024 W CTRPluginFramework::Preferences::Toggle(unsigned long long)
07019234 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
07019248 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
0701925c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
07019270 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
07019284 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
07019298 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
070192ac 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
070192c0 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
070192d4 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
070192e8 00000150 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
07019438 0000014c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
07019584 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
070195c4 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07019644 00000b2c T CTRPluginFramework::PluginMenuTools::InitMenu()
0701a170 00000180 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.0]
0701a2f0 000000c0 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0701a3b0 00000064 t CTRPluginFramework::MenuHotkeyModifier()
0701a414 00000068 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0701a47c 00000098 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
0701a47c 00000098 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
0701a514 00000108 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
0701a61c 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0701a61c 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0701a7ac 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0701a854 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned int, char)
0701a8c4 000000fc W std::__cxx11::to_string(int)
0701a9c0 00000034 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
0701a9f4 00000190 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0701ab84 0000015c t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701ace0 00000048 t CTRPluginFramework::Reboot()
0701ad28 00000054 t CTRPluginFramework::Shutdown()
0701ad7c 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int)
0701adc8 0000012c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > CTRPluginFramework::operator<< <unsigned long, (void*)0>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0701aef4 000001fc t CTRPluginFramework::UpdateScreenshotText()
0701b0f0 00000130 T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
0701b220 00000164 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701b384 0000049c t CTRPluginFramework::ScreenshotMenuCallback()
0701b820 00000058 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)
0701b878 000005c0 t CTRPluginFramework::EditBacklight(CTRPluginFramework::MenuEntryTools*)
0701be38 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0701be58 00000048 t _GLOBAL__sub_D__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0701bea0 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
0701bedc 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0701beec 00000044 T CTRPluginFramework::SubMenu::~SubMenu()
0701beec 00000044 T CTRPluginFramework::SubMenu::~SubMenu()
0701bf30 0000001c T CTRPluginFramework::SubMenu::operator()()
0701bf50 000001f8 T CTRPluginFramework::SubMenu::Draw()
0701c148 000000e0 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
0701c228 00000008 T CTRPluginFramework::SubMenu::IsOpen()
0701c230 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
0701c24c 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
0701c284 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701c284 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701c308 000001ac T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701c4b4 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
0701c4b4 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
0701c4b8 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
0701c4b8 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
0701c4bc 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
0701c4bc 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
0701c4c0 00000018 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
0701c4d8 00000018 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
0701c4f0 00000018 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
0701c508 000001a8 T CTRPluginFramework::HexEditor::ByteView::Draw()
0701c6b0 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
0701c7ec 000000f4 T CTRPluginFramework::HexEditor::IntegerView::Draw()
0701c8e0 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
0701c920 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701c978 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0701c9b8 000000f4 T CTRPluginFramework::HexEditor::~HexEditor()
0701c9b8 000000f4 T CTRPluginFramework::HexEditor::~HexEditor()
0701caac 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
0701cac8 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
0701cae4 00000074 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
0701cb58 0000002c T CTRPluginFramework::HexEditor::_MoveBackward()
0701cb84 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
0701cbc0 00000010 T CTRPluginFramework::HexEditor::Refresh()
0701cbd0 00000044 T CTRPluginFramework::HexEditor::_ApplyChanges()
0701cc14 00000038 T CTRPluginFramework::HexEditor::_DiscardChanges()
0701cc4c 0000002c T CTRPluginFramework::HexEditor::_GetSelectedItem()
0701cc78 00000080 T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
0701ccf8 00000098 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
0701cd90 000000dc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
0701ce6c 000000cc T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
0701cf38 000000bc T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
0701cff4 000001b4 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
0701d1a8 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
0701d1b8 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
0701d1c8 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
0701d1d8 00000040 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
0701d218 00000040 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_erase_at_end(CTRPluginFramework::HexEditor::Item*)
0701d258 0000006c T CTRPluginFramework::HexEditor::SetView(unsigned long)
0701d2c4 000000d4 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
0701d398 00000108 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
0701d4a0 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
0701d4f8 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0701d578 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
0701d740 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
0701d824 000000b8 T CTRPluginFramework::HexEditor::_CreateCheat()
0701d8dc 00000260 T CTRPluginFramework::HexEditor::_RenderTop(void*)
0701db40 000002e4 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701db40 000002e4 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701de24 00000104 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0701df28 00000184 T CTRPluginFramework::HexEditor::_BrowseHistory()
0701e0ac 00000094 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0701e140 00000274 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
0701e3b4 000001e0 T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
0701e594 000002b8 T CTRPluginFramework::HexEditor::ByteView::UpdateView()
0701e84c 00000068 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
0701e8b4 00000180 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_default_append(unsigned int)
0701ea34 000001c8 T CTRPluginFramework::HexEditor::_Update()
0701ebfc 00000294 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0701ee90 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
0701eea4 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701eefc 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701eefc 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701ef24 00000020 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701ef44 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
0701ef4c 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
0701ef60 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
0701ef6c 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
0701ef74 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
0701ef98 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
0701efc8 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
0701efe4 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
0701f04c 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701f04c 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701f138 00000238 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
0701f370 00000020 T CTRPluginFramework::MenuEntryTools::Disable()
0701f390 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701f390 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701f3b0 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701f3d0 00000058 T CTRPluginFramework::MenuEntryTools::Enable()
0701f428 00000084 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701f428 00000084 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701f4ac 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701f4ac 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701f50c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701f50c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701f56c 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0701f570 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701f5c8 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0701f608 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
0701f63c 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
0701f6a0 000000c8 T CTRPluginFramework::GuideReader::_LoadBMP()
0701f768 000003f4 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
0701fb5c 00000348 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0701fea4 000001e0 T CTRPluginFramework::GuideReader::GuideReader()
0701fea4 000001e0 T CTRPluginFramework::GuideReader::GuideReader()
07020084 0000015c T CTRPluginFramework::GuideReader::Draw()
070201e0 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07020254 00000038 t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .constprop.0]
0702028c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070202e4 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
0702030c 00000040 t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.0]
0702034c 00000014 t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_deallocate(CTRPluginFramework::TouchKey*, unsigned int) [clone .isra.0]
07020360 0000007c T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
07020360 0000007c T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
070203dc 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
070203e4 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(unsigned long)
070203ec 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
070203f4 00000008 T CTRPluginFramework::KeyboardImpl::GetMessage[abi:cxx11]()
070203fc 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
07020404 00000008 T CTRPluginFramework::KeyboardImpl::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&))
0702040c 0000005c T CTRPluginFramework::KeyboardImpl::Clear()
07020468 000001c8 T CTRPluginFramework::KeyboardImpl::_RenderTop()
07020630 000004dc T CTRPluginFramework::KeyboardImpl::_RenderBottom()
07020b0c 000001c4 T CTRPluginFramework::KeyboardImpl::_UpdateScroll(float, bool)
07020cd0 00000068 T CTRPluginFramework::UnitsToNextChar(char const*, int)
07020d38 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
07020dc8 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
07020e48 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
07020ecc 0000015c T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
07021028 0000016c T CTRPluginFramework::KeyboardImpl::_Update(float)
07021194 00000060 T CTRPluginFramework::KeyboardImpl::_CheckInput()
070211f4 00000074 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
07021268 000000a8 T CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)
07021310 0000054c T CTRPluginFramework::KeyboardImpl::_HandleManualKeyPress(CTRPluginFramework::Key)
0702185c 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
07021864 00000028 W std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
07021864 00000028 W std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0702188c 00000068 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
070218f4 0000010c W void std::vector<float, std::allocator<float> >::_M_realloc_insert<float const&>(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
07021a00 0000002c W std::vector<float, std::allocator<float> >::push_back(float const&)
07021a2c 00000108 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString* const&)
07021b34 0000002c W std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::push_back(CTRPluginFramework::TouchKeyString* const&)
07021b60 000002e0 T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
07021e40 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
07021ea4 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07021f04 00000054 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [4]>)(), (declval<CTRPluginFramework::Rect<int>&>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07021f58 00000054 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [3]>)(), (declval<CTRPluginFramework::Rect<int>&>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07021fac 00000058 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [4]>)(), (declval<CTRPluginFramework::Rect<int>&>)(), (declval<int>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.0]
07022004 00000174 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
07022178 0000004c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
070221c4 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
070221f8 000001dc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070221f8 000001dc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070223d4 000001d0 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070223d4 000001d0 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070225a4 00000714 T CTRPluginFramework::KeyboardImpl::_CheckKeys()
07022cb8 0000007c T CTRPluginFramework::KeyboardImpl::operator()(int&)
07022d34 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
07022d60 00000118 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&) [clone .isra.0]
07022e78 0000010c t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
07022f84 000000d8 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.0]
0702305c 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
070235d8 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
07023b54 000000d0 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07023c24 000008bc T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
070244e0 000000d0 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
070245b0 00000a54 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
07025004 00000040 T CTRPluginFramework::KeyboardImpl::_Qwerty()
07025044 0000010c t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
07025150 000001a8 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
070252f8 00000048 T CTRPluginFramework::KeyboardImpl::_Decimal()
07025340 00000054 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
07025394 0000004c T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
070253e0 000005ac T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
0702598c 00000368 T CTRPluginFramework::KeyboardImpl::Run()
07025cf4 00000038 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
07025cf4 00000038 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
07025d2c 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
07025d58 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
07025d6c 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
07025d90 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
07025dd0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07025e28 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07025e68 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07025ebc 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
07025ee0 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
07025f08 00000030 W CTRPluginFramework::ARCode::~ARCode()
07025f08 00000030 W CTRPluginFramework::ARCode::~ARCode()
07025f38 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
07025f6c 00000014 t __tcf_0
07025f80 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07026000 00000120 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
07026120 000000e4 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
07026204 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07026260 0000011c t CTRPluginFramework::ProcessPathString(unsigned char*)
0702637c 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
0702637c 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
070265d0 000000c4 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.0]
07026694 00000180 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
07026814 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
070269e0 00000180 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
07026b60 00000120 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07026c80 0000003c t CTRPluginFramework::ARCode& std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&) [clone .isra.0]
07026cbc 0000014c T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
07026e08 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
07026e38 000000cc t std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .isra.0]
07026f04 0000026c T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
07027170 000000cc T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
0702723c 000001bc T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
070273f8 000001a0 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
07027598 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070275f0 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07027630 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
07027748 00000058 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
070277a0 00000010 T CTRPluginFramework::PluginMenuSearch::_cancelBtn_OnClick()
070277b0 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
070277e4 0000002c W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
07027810 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
07027880 0000010c W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
0702798c 0000003c W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
070279c8 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
07027a48 00000060 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
07027aa8 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
07027c14 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07027c14 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07028084 00000264 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
070282e8 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07028328 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
070283d0 000002a0 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
07028670 0000015c t CTRPluginFramework::ClearSearchFolder()
070287cc 000000e8 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
070288b4 00000520 T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)
07028dd4 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
07028e04 000002f0 T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
070290f4 000003ac T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
070294a0 00000064 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
07029504 00000050 t std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
07029554 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07029554 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07029590 00000138 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
070296c8 0000017c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
07029844 00000058 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
0702989c 00000194 T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
07029a30 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
07029a48 000001c0 T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
07029c08 00000108 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
07029d10 000001c0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
07029ed0 00000108 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
07029fd8 00000088 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
0702a060 00000224 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
0702a284 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
0702a2b0 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
0702a2ec 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
0702a328 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
0702a364 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
0702a3a0 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
0702a3dc 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
0702a408 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
0702a444 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
0702a480 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
0702a4bc 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
0702a4f8 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
0702a524 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
0702a560 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
0702a58c 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
0702a5b8 0000002c T CTRPluginFramework::Icon::DrawGameController(int, int)
0702a5e4 0000003c T CTRPluginFramework::Icon::DrawGameController25(int, int, bool)
0702a620 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
0702a64c 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
0702a688 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
0702a6b4 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
0702a6e8 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
0702a724 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
0702a750 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
0702a78c 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
0702a7b8 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
0702a7e4 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
0702a810 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
0702a83c 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
0702a868 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
0702a894 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
0702a8c0 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
0702a8ec 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
0702a928 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
0702a954 0000001c T CTRPluginFramework::Icon::DrawCustomIcon(CTRPluginFramework::CustomIcon const&, int, int)
0702a970 00000034 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Icon17DefaultCustomIconE
0702a9a4 00000024 t fontGetSystemFont
0702a9c8 00000010 T CTRPluginFramework::Glyph::Width() const
0702a9d8 000004d4 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
0702aeac 00000350 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
0702b1fc 000000c4 T CTRPluginFramework::Font::Initialize()
0702b2c0 0000001c W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
0702b2dc 0000018c W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<unsigned long const, unsigned long>, false>*, unsigned int)
0702b468 000000c0 W std::__detail::_Map_base<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned long const&)
0702b528 00000138 T CTRPluginFramework::Font::CacheGlyph(unsigned long)
0702b660 0000008c T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
0702b6ec 00000020 T CTRPluginFramework::Font::GetGlyph(char)
0702b70c 00000048 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
0702b754 00000078 t _GLOBAL__sub_D__ZN18CTRPluginFramework15g_fontAllocatedE
0702b7cc 0000016c t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
0702b938 00000020 t __tcf_0
0702b958 000001a4 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
0702bafc 0000011c T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
0702bc18 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
0702bcac 000000a4 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
0702bd50 0000031c T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0702c06c 00000050 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
0702c0bc 00000104 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
0702c1c0 0000003c t CTRPluginFramework::Line<int>& std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&) [clone .isra.0]
0702c1fc 000001b0 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::_M_push_back_aux<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
0702c3ac 00000038 t CTRPluginFramework::Vector<int>& std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&) [clone .isra.0]
0702c3e8 0000069c T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
0702ca84 00000198 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0702cc1c 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0702cc1c 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0702ccd8 00000028 T CTRPluginFramework::Window::~Window()
0702ccd8 00000028 T CTRPluginFramework::Window::~Window()
0702cd00 00000064 T CTRPluginFramework::Window::Draw() const
0702cd64 000000dc T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0702ce40 00000018 T CTRPluginFramework::Window::DrawButton() const
0702ce58 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
0702ce70 00000018 T CTRPluginFramework::Window::MustClose() const
0702ce88 00000028 T CTRPluginFramework::Window::Close() const
0702ceb0 00000004 T CTRPluginFramework::Window::GetRect() const
0702ceb4 00000034 T CTRPluginFramework::Window::UpdateBackgrounds()
0702cee8 00000080 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
0702cf68 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Window12BottomWindowE
0702cf88 00000014 T CTRPluginFramework::UIContainer::UIContainer()
0702cf88 00000014 T CTRPluginFramework::UIContainer::UIContainer()
0702cf9c 00000028 T CTRPluginFramework::UIContainer::~UIContainer()
0702cf9c 00000028 T CTRPluginFramework::UIContainer::~UIContainer()
0702cfc4 00000024 T CTRPluginFramework::UIContainer::Draw()
0702cfe8 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
0702d01c 00000108 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
0702d124 00000034 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
0702d158 00000008 W CTRPluginFramework::Drawable::operator()()
0702d160 000000f8 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
0702d258 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0702d2b0 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
0702d2b0 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
0702d33c 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
0702d33c 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
0702d3f4 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
0702d3f4 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
0702d480 0000004c T CTRPluginFramework::TouchKey::Clear()
0702d4cc 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
0702d4cc 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
0702d4ec 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
0702d50c 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
0702d514 00000008 T CTRPluginFramework::TouchKey::IsEnabled()
0702d51c 00000070 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
0702d58c 00000070 T CTRPluginFramework::TouchKey::Draw()
0702d5fc 00000008 T CTRPluginFramework::TouchKey::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
0702d604 00000108 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
0702d70c 000000d4 W CTRPluginFramework::KeyContent::KeyContent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702d70c 000000d4 W CTRPluginFramework::KeyContent::KeyContent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702d7e0 000000d0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
0702d7e0 000000d0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
0702d8b0 00000178 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702da28 00000094 T CTRPluginFramework::ComboBox::Draw()
0702dabc 00000054 W CTRPluginFramework::ComboBox::~ComboBox()
0702dabc 00000054 W CTRPluginFramework::ComboBox::~ComboBox()
0702db10 00000020 W CTRPluginFramework::ComboBox::~ComboBox()
0702db30 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
0702db30 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
0702db7c 0000003c T CTRPluginFramework::ComboBox::Clear()
0702dbb8 00000080 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0702dc38 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702dc88 000000a8 T CTRPluginFramework::ComboBox::operator()()
0702dd30 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
0702dd30 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
0702dd34 00000014 T CTRPluginFramework::FloatingButton::Draw()
0702dd48 00000014 T CTRPluginFramework::FloatingButton::operator()()
0702dd5c 00000018 T CTRPluginFramework::FloatingButton::~FloatingButton()
0702dd74 000001ac T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
0702df20 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0702df20 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0702df60 00000054 t CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask::{lambda(void*)#1}::_FUN(CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask)
0702dfb4 0000000c T CTRPluginFramework::OSDImpl::Lock()
0702dfc0 0000001c T CTRPluginFramework::OSDImpl::TryLock()
0702dfdc 0000000c T CTRPluginFramework::OSDImpl::Unlock()
0702dfe8 000000e8 T CTRPluginFramework::OSDImpl::PauseFrame()
0702e0d0 0000019c T CTRPluginFramework::OSDImpl::WaitFramePaused()
0702e26c 000000ac T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
0702e318 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl4LockEv
0702e348 00000084 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl4LockEv
0702e3cc 000000c4 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
0702e490 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702e490 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702e608 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702e608 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702e760 000002c0 T CTRPluginFramework::MessageBoxImpl::_Draw()
0702ea20 00000210 T CTRPluginFramework::MessageBoxImpl::operator()()
0702ec30 0000015c T CTRPluginFramework::Button::Draw()
0702ed8c 00000070 T CTRPluginFramework::Button::operator()()
0702edfc 000001a8 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
0702efa4 00000038 T CTRPluginFramework::Button::~Button()
0702efa4 00000038 T CTRPluginFramework::Button::~Button()
0702efdc 00000020 T CTRPluginFramework::Button::~Button()
0702effc 00000194 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0702effc 00000194 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0702f190 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0702f190 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0702f1b0 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0702f1b0 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0702f248 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0702f248 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0702f25c 00000018 T CTRPluginFramework::Button::Enable(bool)
0702f274 00000010 T CTRPluginFramework::Button::Enable()
0702f284 00000010 T CTRPluginFramework::Button::Disable()
0702f294 00000010 T CTRPluginFramework::Button::Lock()
0702f2a4 00000010 T CTRPluginFramework::Button::Execute()
0702f2b4 00000018 T CTRPluginFramework::Button::SetState(bool)
0702f2cc 00000010 T CTRPluginFramework::Button::GetState() const
0702f2dc 00000008 T CTRPluginFramework::Button::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
0702f2e4 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0702f2e8 000002fc T CTRPluginFramework::TextBox::Draw()
0702f5e4 0000002c t std::_Vector_base<unsigned char*, std::allocator<unsigned char*> >::_M_allocate(unsigned int) [clone .isra.0]
0702f610 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0702f668 00000094 T CTRPluginFramework::TextBox::TextBox()
0702f668 00000094 T CTRPluginFramework::TextBox::TextBox()
0702f6fc 0000000c T CTRPluginFramework::TextBox::Open() const
0702f708 0000000c T CTRPluginFramework::TextBox::Close() const
0702f714 00000008 T CTRPluginFramework::TextBox::IsOpen() const
0702f720 00000228 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
0702f948 0000000c T CTRPluginFramework::TextBox::DrawConst() const
0702f954 00000094 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
0702f9e8 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
0702fa9c 00000058 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
0702faf4 000000a4 W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
0702fb98 0000023c T CTRPluginFramework::TextBox::_GetTextInfos()
0702fdd4 00000184 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
0702fdd4 00000184 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
0702ff58 00000160 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070300b8 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
070300b8 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
0703012c 00000008 T CTRPluginFramework::TouchKeyString::ForcePressed(bool)
07030134 00000034 T CTRPluginFramework::TouchKeyString::CanUse()
07030168 000000cc T CTRPluginFramework::TouchKeyString::Draw()
07030234 000000fc T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
07030330 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
07030348 00000014 T CTRPluginFramework::TouchKeyString::GetPosition(unsigned short&, float&)
0703035c 00000018 T CTRPluginFramework::TouchKeyString::SetPosition(unsigned short, float)
07030374 00000048 T CTRPluginFramework::TouchKeyString::operator()()
070303bc 00000008 T CTRPluginFramework::TouchKeyString::GetAcceptSoundEvent()
070303c4 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
070303c4 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07030470 0000007c T CTRPluginFramework::NumericTextBox::Draw()
070304ec 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
070304ec 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
0703050c 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
0703052c 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
070305d4 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.0]
0703060c 00000060 T CTRPluginFramework::NumericTextBox::_UpdateVal()
0703066c 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
0703067c 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
07030684 0000000c T CTRPluginFramework::NumericTextBox::Clear()
07030690 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07030690 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
070306f8 000000f4 T CTRPluginFramework::NumericTextBox::operator()()
070307ec 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
070307fc 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07030870 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070308c8 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
07030900 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
070309a8 00000140 T ARM_Disasm::Decode01(unsigned long)
07030ae8 00000028 T ARM_Disasm::Decode10(unsigned long)
07030b10 00000078 T ARM_Disasm::Decode11(unsigned long)
07030b88 00000054 T ARM_Disasm::DecodeMUL(unsigned long)
07030bdc 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
07030c2c 00000118 T ARM_Disasm::DecodeALU(unsigned long)
07030d44 000000c4 T ARM_Disasm::Decode00(unsigned long)
07030e08 00000030 T ARM_Disasm::Decode(unsigned long)
07030e38 0000011c W void std::vector<RegBlock, std::allocator<RegBlock> >::_M_realloc_insert<int&, int&>(__gnu_cxx::__normal_iterator<RegBlock*, std::vector<RegBlock, std::allocator<RegBlock> > >, int&, int&)
07030f54 0000003c t RegBlock& std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&) [clone .isra.0]
07030f90 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
07031010 0000033c T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
0703134c 00000078 T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
070313c4 00000070 T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
07031434 00000080 T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
070314b4 00000448 T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
070318fc 00000220 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
07031b1c 000000a4 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
07031bc0 000000c0 T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
07031c80 000000c0 T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
07031d40 000000b0 T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
07031df0 00000090 T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
07031e80 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
07031ff8 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
0703210c 00000064 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
07032170 00000094 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
07032204 0000034c T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
07032550 000002fc T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
0703284c 00000070 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
070328bc 00000158 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07032a14 00000360 T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
07032d74 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07032dcc 00000090 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07032e5c 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
07032e98 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
07032e98 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
07032ebc 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
07032ee4 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07032ee4 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07032f18 000000b0 T CTRPluginFramework::ARCodeContext::Clear()
07032fc8 00000104 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
07032fc8 00000104 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
070330cc 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
070330cc 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
070331f0 000000f0 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070332e0 00000084 T CTRPluginFramework::ARCode::Update()
07033364 0000003c T CTRPluginFramework::ARCodeContext::Update()
070333a0 000000c0 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
07033460 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework11g_codeTypesE
07033480 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .constprop.0] [clone .isra.0]
07033498 00000020 t __tcf_0
070334b8 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
070334e0 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
070334f8 00000050 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
07033548 00000050 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07033598 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070335e0 00000050 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
070335e0 00000050 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
07033630 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
07033650 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
070336f8 00000040 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::size() const
07033738 00000128 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
07033860 00000068 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
070338c8 000000f0 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070339b8 00000104 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
07033abc 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
07033acc 00000174 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
07033c40 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*) [clone .isra.0]
07033c90 000004d8 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07034168 00000134 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
0703429c 00000744 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
070349e0 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
07034a30 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07034a30 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07034aa8 00000020 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07034ac8 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07034ac8 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07034b14 00000068 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07034b7c 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07034c24 00000130 T CTRPluginFramework::MenuEntryActionReplay::Update()
07034d54 00000090 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
07034de4 00000154 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
07034f38 00000040 t std::_Vector_base<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_allocate(unsigned int) [clone .isra.0]
07034f78 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07034fd0 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
07034ff8 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07034ff8 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07034ff8 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07034ff8 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07035044 00000044 W __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07035088 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
07035088 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
070350a8 00000034 W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
070350dc 00000068 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07035144 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
070351a4 00000040 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
070351e4 000001a4 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
070351e4 000001a4 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07035388 000002bc T CTRPluginFramework::ARCodeEditor::_RenderTop()
07035644 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
070356a0 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) [clone .isra.0]
070356f0 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07035798 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07035798 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07035810 0000003c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703584c 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07035880 00001478 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
07036cf8 0000008c T CTRPluginFramework::ARCodeEditor::_Update()
07036d84 00000068 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
07036dec 00000024 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
07036e10 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
07036e38 0000003c t CTRPluginFramework::ARCode& std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&) [clone .isra.0]
07036e74 00000030 t __tcf_0
07036ea4 0000012c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
07036fd0 0000003c t CTRPluginFramework::ARCodeEditor::CodeLine& std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&) [clone .isra.0]
0703700c 000002f4 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
07037300 00000690 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
07037990 00000178 t CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&) [clone .isra.0]
07037b08 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07037bc0 0000047c T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
0703803c 000003cc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07038408 00000200 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
07038608 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07038608 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07038634 00000018 T CTRPluginFramework::LineReader::~LineReader()
07038634 00000018 T CTRPluginFramework::LineReader::~LineReader()
0703864c 00000100 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703874c 00000024 t __tcf_0
07038770 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07038770 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07038798 0000004c T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
070387e4 00000048 T CTRPluginFramework::LineWriter::Flush()
0703882c 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
0703882c 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07038848 00000064 T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070388ac 00000018 T CTRPluginFramework::LineWriter::Close()
070388c4 00000040 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
07038904 00000020 T CTRPluginFramework::Time::AsSeconds() const
07038924 00000028 T CTRPluginFramework::Time::AsMicroseconds() const
0703894c 00000030 t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, ThreadVars*> >*) [clone .isra.0]
0703897c 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
0703897c 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
070389b0 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
070389b0 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
070389d0 00000054 T CTRPluginFramework::ThreadEx::Start(void*)
07038a24 00000048 T CTRPluginFramework::ThreadEx::Join(bool)
07038a6c 00000008 T CTRPluginFramework::ThreadEx::GetStatus()
07038a74 00000098 W std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_get_insert_unique_pos(unsigned long const&)
07038b0c 0000016c W std::_Rb_tree_iterator<std::pair<unsigned long const, ThreadVars*> > std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_emplace_hint_unique<std::pair<unsigned long, ThreadVars*> >(std::_Rb_tree_const_iterator<std::pair<unsigned long const, ThreadVars*> >, std::pair<unsigned long, ThreadVars*>&&)
07038c78 00000224 T __ctrpf_getThreadVars
07038e9c 00000038 t _GLOBAL__sub_I___ctrpf_getThreadVars
07038ed4 00000038 t _GLOBAL__sub_D___ctrpf_getThreadVars
07038f0c 00000004 T CTRPluginFramework::SoundEngine::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
07038f10 0000000c T CTRPluginFramework::Sound::Sound()
07038f10 0000000c T CTRPluginFramework::Sound::Sound()
07038f1c 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
07038f1c 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
07038f30 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07038f30 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07038f64 000000c0 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound const&)
07039024 00000074 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound&&)
07039098 00000058 T CTRPluginFramework::Sound::~Sound()
07039098 00000058 T CTRPluginFramework::Sound::~Sound()
070390f0 00000018 T CTRPluginFramework::Sound::GetLoadStatus()
07039108 00000040 T CTRPluginFramework::Sound::Play(int, int)
07039148 00000008 T CTRPluginFramework::Sound::Play(int)
07039150 00000008 T CTRPluginFramework::Sound::Play()
07039158 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07039158 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07039180 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07039180 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
070391b0 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
070391b8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07039210 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
07039218 00000048 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07039218 00000048 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07039260 00000030 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
07039290 0000001c T CTRPluginFramework::HotkeyManager::Count()
070392ac 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0703932c 000000bc T CTRPluginFramework::Hotkey::AskForKeys()
070393e8 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
07039464 00000138 T CTRPluginFramework::HotkeyManager::AskForKeys()
0703959c 000000f8 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
07039694 000000c4 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
07039758 00000148 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
070398a0 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6HotkeyC2Ev
070398d4 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
070398d4 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
070398e4 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
070398e4 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
07039900 000003ac t cwav_initialize
07039cac 000000f4 t cwav_stopImpl.part.0
07039da0 00000004 T cwavUseEnvironment
07039da4 00000034 T cwavSetVAToPACallback
07039dd8 00000050 T cwavLoad
07039e28 0000049c T cwavPlay
0703a2c4 00000064 T cwavStop
0703a328 00000170 T cwavFree
0703a498 00000004 T cwav_defaultVAToPA
0703a49c 00000004 T cwavEnvUseEnvironment
0703a4a0 00000008 T cwavEnvGetEnvironment
0703a4a8 00000004 T cwavEnvInitialize
0703a4ac 00000004 T cwavEnvFinalize
0703a4b0 00000014 T cwavEnvCompatibleEncoding
0703a4c4 00000008 T cwavEnvGetChannelAmount
0703a4cc 00000018 T cwavEnvIsChannelAvailable
0703a4e4 000000f8 T cwavEnvPlay
0703a5dc 00000004 T cwavEnvChannelIsPlaying
0703a5e0 00000004 T cwavEnvStop
0703a5e4 0000002c W MemBlock::Create(unsigned char*, unsigned long)
0703a610 00000034 W MemPool::DelBlock(MemBlock*)
0703a644 0000005c T MemPool::CoalesceRight(MemBlock*)
0703a6a0 00000100 T MemPool::Allocate(MemChunk&, unsigned long, int)
0703a7a0 00000100 T MemPool::Deallocate(MemChunk const&)
0703a8a0 00000020 T MemPool::GetFreeSpace()
0703a8c0 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0703a8c0 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0703a984 00000008 T CTRPluginFramework::SoundImpl::GetLoadStatus()
0703a98c 00000018 T CTRPluginFramework::SoundImpl::Play(int, int)
0703a9a4 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
0703a9a4 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
0703a9cc 000000d0 T CTRPluginFramework::Search32::FirstSearchUnknown()
0703aa9c 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
0703ab5c 00000064 W CTRPluginFramework::Search::~Search()
0703ab5c 00000064 W CTRPluginFramework::Search::~Search()
0703abc0 00000044 T CTRPluginFramework::Search32::~Search32()
0703abc0 00000044 T CTRPluginFramework::Search32::~Search32()
0703ac04 00000020 T CTRPluginFramework::Search32::~Search32()
0703ac24 00000024 W CTRPluginFramework::Search::~Search()
0703ac48 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0703ac48 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0703ae4c 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703ae4c 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703ae6c 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0703ae6c 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0703af00 00000124 W std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0703b024 000001ac T CTRPluginFramework::Search32::SecondSearchSpecified()
0703b1d0 00000108 W std::vector<unsigned long, IAllocator<unsigned long> >::_M_default_append(unsigned int)
0703b2d8 00000194 T CTRPluginFramework::Search32::SecondSearchUnknown()
0703b46c 00000148 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0703b5b4 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
0703b600 0000013c T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
0703b73c 0000013c T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
0703b878 0000003c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >& std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0703b8b4 00000068 W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
0703b91c 000000f0 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0703ba0c 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
0703ba48 00000080 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
0703bac8 0000010c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0703bbd4 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
0703bc20 0000032c T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
0703bf4c 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0703c1ac 00000278 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0703c424 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0703c684 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
0703c6b8 000002ec T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0703c9a4 00000044 T CTRPluginFramework::Search::UpdateProgress()
0703c9e8 00000048 T CTRPluginFramework::Search::Cancel()
0703ca30 00000190 T CTRPluginFramework::Search::CheckNextRegion()
0703cbc0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703cc18 00000148 W std::__cxx11::to_string(unsigned long)
0703cd60 00000008 T CTRPluginFramework::Search::GetHeader() const
0703cd68 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
0703cdb0 0000000c T CTRPluginFramework::Search::GetType() const
0703cdbc 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
0703cdd4 00000070 T CTRPluginFramework::Search::WriteHeader()
0703ce44 00000058 T CTRPluginFramework::Search::WriteResults()
0703ce9c 00000048 T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
0703cee4 0000010c W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
0703cff0 00000084 T CTRPluginFramework::Search::CreateIndexTable()
0703d074 0000013c T CTRPluginFramework::Search::ExecuteSearch()
0703d1b0 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0703d230 000001e4 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703d230 000001e4 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703d414 0000027c T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0703d414 0000027c T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0703d690 00000238 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
0703d8c8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703d920 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0703d920 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0703d96c 000000b0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
0703da1c 00000098 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
0703dab4 000000f0 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
0703dba4 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0703dc24 00000390 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
0703dfb4 0000013c T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
0703e0f0 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
0703e118 000000c8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
0703e1e0 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0703e210 000000a0 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703e2b0 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*) [clone .isra.0]
0703e300 000002a0 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
0703e5a0 00000378 T CTRPluginFramework::GatewayRAMDumper::operator()()
0703e918 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703e970 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0703e9b0 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
0703ea64 00000058 T CTRPluginFramework::SearchMenu::_JumpInEditor()
0703eabc 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0703eb3c 0000018c T CTRPluginFramework::SearchMenu::_Edit()
0703ecc8 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
0703ed44 000000bc T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0703ed44 000000bc T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0703ee00 00000230 T CTRPluginFramework::SearchMenu::Update()
0703f030 00000148 T CTRPluginFramework::SearchMenu::_Export()
0703f178 00000158 T CTRPluginFramework::SearchMenu::_ExportAll()
0703f2d0 000005b0 T CTRPluginFramework::SearchMenu::Draw()
0703f880 0000011c T CTRPluginFramework::SearchMenu::_ShowGame()
0703f9a0 00000510 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0703feb0 00000030 t CTRPluginFramework::GetIndex(int)
0703fee0 00000134 T CTRPluginFramework::HotkeysModifier::_DrawBottom()
07040014 00000074 T CTRPluginFramework::HotkeysModifier::_Update()
07040088 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
07040088 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
070400f4 00000094 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
07040188 000001cc T CTRPluginFramework::HotkeysModifier::operator()()
07040354 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
07040380 00000038 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
07040380 00000038 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
070403b8 00000110 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button const&)
070404c8 0000003c W std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::push_back(CTRPluginFramework::Button const&)
07040504 0000015c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07040504 0000015c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07040660 000000e4 T CTRPluginFramework::Converter::Converter()
07040660 000000e4 T CTRPluginFramework::Converter::Converter()
07040744 00000010 T CTRPluginFramework::Converter::Instance()
07040754 00000110 T CTRPluginFramework::Converter::_Draw()
07040864 00000228 T CTRPluginFramework::Converter::operator()(unsigned long)
07040a8c 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
07040ab0 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
07040ad4 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
07040af8 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
07040b20 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
07040b48 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
07040b70 00000100 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
07040c70 0000199c T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
0704260c 000000b0 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
070426bc 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
070426dc 00000450 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07042b2c 00000454 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07042f80 0000044c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070433cc 00000618 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070439e4 000008b0 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07044294 000008a8 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07044b3c 00000868 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070453a4 00000c38 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07045fdc 00000848 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07046824 000008a8 T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070470cc 00000894 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07047960 00000dac T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704870c 00000c64 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07049370 00000718 T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07049a88 000003fc T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07049e84 000006b8 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704a53c 00000084 W envGetHandle
0704a5c0 00000050 W envDestroyHandles
0704a610 0000000c T __sync_init
0704a61c 00000018 T __sync_fini
0704a634 0000002c T syncArbitrateAddressWithTimeout
0704a660 0000001c T LightLock_Init
0704a67c 000000b0 T LightLock_Lock
0704a72c 00000040 T LightLock_Unlock
0704a76c 00000024 T RecursiveLock_Init
0704a790 00000030 T RecursiveLock_Lock
0704a7c0 00000078 T RecursiveLock_TryLock
0704a838 00000054 T RecursiveLock_Unlock
0704a88c 00000040 T LightEvent_Init
0704a8cc 000000a4 T LightEvent_Clear
0704a970 00000048 T LightEvent_Pulse
0704a9b8 000000c8 T LightEvent_Signal
0704aa80 000000b0 T LightEvent_Wait
0704ab30 00000014 T LightSemaphore_Init
0704ab44 00000094 T LightSemaphore_Acquire
0704abd8 00000064 T LightSemaphore_Release
0704ac3c 00000074 T osConvertVirtToPhys
0704acb0 00000054 T osGetTimeRef
0704ad04 000000ec T osGetTime
0704adf0 00000094 T fontEnsureMapped
0704ae84 00000100 T fontGlyphIndexFromCodePoint
0704af84 00000070 T fontGetCharWidthInfo
0704aff4 00000130 T srvInit
0704b124 00000058 T srvExit
0704b17c 000000a0 T srvGetServiceHandleDirect
0704b21c 00000038 T srvGetServiceHandle
0704b254 00000038 T srvPublishToSubscriber
0704b28c 000000b4 t mappableFindAddressWithin
0704b340 00000028 T mappableInit
0704b368 00000080 T mappableAlloc
0704b3e8 00000004 T mappableFree
0704b3ec 000000a4 T cfguInit
0704b490 0000003c T cfguExit
0704b4cc 00000054 T CFGU_GetSystemLanguage
0704b520 000000f0 T gspExit
0704b610 00000024 W hidShouldUseIrrst
0704b634 0000018c T hidInit
0704b7c0 000000e8 T hidExit
0704b8a8 000002a4 T hidScanInput
0704bb4c 00000010 T hidKeysHeld
0704bb5c 00000010 T hidKeysDown
0704bb6c 00000010 T hidKeysUp
0704bb7c 00000018 T hidTouchRead
0704bb94 0000008c T acInit
0704bc20 0000003c T acExit
0704bc5c 000000a4 T amInit
0704bd00 0000003c T amExit
0704bd3c 000000b8 T sslcInit
0704bdf4 00000048 T sslcExit
0704be3c 00000048 T sslcGenerateRandomData
0704be84 00000158 T aptSendCommand
0704bfdc 00000030 T aptHook
0704c00c 00000030 T aptUnhook
0704c03c 00000028 T APT_PrepareToCloseApplication
0704c064 00000048 T APT_CloseApplication
0704c0ac 0000007c T APT_CheckNew3DS
0704c128 00000048 T APT_GetSharedFont
0704c170 0000000c T srvPmGetSessionHandle
0704c17c 000000cc T fsInit
0704c248 0000003c T fsExit
0704c284 000000cc T FSUSER_OpenFile
0704c350 000000bc T FSUSER_DeleteFile
0704c40c 000000f8 T FSUSER_RenameFile
0704c504 000000bc T FSUSER_DeleteDirectoryRecursively
0704c5c0 000000d4 T FSUSER_CreateFile
0704c694 000000c4 T FSUSER_CreateDirectory
0704c758 000000f8 T FSUSER_RenameDirectory
0704c850 000000b4 T FSUSER_OpenDirectory
0704c904 00000098 T FSUSER_OpenArchive
0704c99c 00000058 T FSFILE_Read
0704c9f4 00000060 T FSFILE_Write
0704ca54 0000003c T FSFILE_GetSize
0704ca90 00000028 T FSFILE_SetSize
0704cab8 0000003c T FSFILE_Close
0704caf4 00000024 T FSFILE_Flush
0704cb18 00000028 T FSFILE_SetPriority
0704cb40 00000050 T FSDIR_Read
0704cb90 0000003c T FSDIR_Close
0704cbcc 00000010 T rbtree_init
0704cbdc 000001b4 t do_insert
0704cd90 00000008 T rbtree_insert
0704cd98 00000090 T rbtree_rotate
0704ce28 00000318 T rbtree_remove
0704d140 00000074 T rbtree_find
0704d1b4 00000054 T encode_utf16
0704d208 000000e0 T encode_utf8
0704d2e8 000000c0 T utf8_to_utf16
0704d3a8 00000064 T decode_utf16
0704d40c 0000013c T decode_utf8
0704d548 T svcQueryMemory
0704d578 T svcExitProcess
0704d580 T svcCreateThread
0704d5a0 T svcExitThread
0704d5a8 T svcSleepThread
0704d5b0 T svcSetThreadPriority
0704d5b8 T svcReleaseMutex
0704d5c0 T svcCreateEvent
0704d5d4 T svcSignalEvent
0704d5dc T svcClearEvent
0704d5e4 T svcMapMemoryBlock
0704d5ec T svcUnmapMemoryBlock
0704d5f4 T svcCreateAddressArbiter
0704d608 T svcArbitrateAddress
0704d620 T svcArbitrateAddressNoTimeout
0704d628 T svcCloseHandle
0704d630 T svcWaitSynchronization
0704d638 T svcWaitSynchronizationN
0704d660 T svcDuplicateHandle
0704d674 T svcGetSystemTick
0704d67c T svcGetSystemInfo
0704d694 T svcGetProcessInfo
0704d6ac T svcConnectToPort
0704d6c0 T svcSendSyncRequest
0704d6c8 T svcOpenProcess
0704d6dc T svcGetProcessId
0704d6f0 T svcGetThreadId
0704d704 T svcBreak
0704d70c T svcInvalidateProcessDataCache
0704d714 T svcFlushProcessDataCache
0704d71c T svcKernelSetState
0704d724 T svcQueryProcessMemory
0704d748 00000164 T irrstInit
0704d8ac 000000cc T irrstExit
0704d978 000000b4 T irrstScanInput
0704da2c 00000024 T irrstKeysHeld
0704da50 0000005c T rbtree_node_next
0704daac 00000004 T operator delete(void*)
0704dab0 00000004 T operator delete(void*, std::nothrow_t const&)
0704dab4 00000004 T operator delete(void*, unsigned int)
0704dab8 00000004 T operator delete[](void*)
0704dabc 0000000c W __gnu_cxx::__concurrence_lock_error::what() const
0704dac8 0000000c W __gnu_cxx::__concurrence_unlock_error::what() const
0704dad4 0000000c W __gnu_cxx::__concurrence_broadcast_error::what() const
0704dae0 0000000c W __gnu_cxx::__concurrence_wait_error::what() const
0704daf0 00000038 t (anonymous namespace)::init()
0704db28 00000024 t (anonymous namespace)::init_static_cond()
0704db4c 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0704db4c 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0704db6c 0000002c W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0704db98 00000020 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0704db98 00000020 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0704dbb8 0000002c W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0704dbe4 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0704dbe4 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0704dc04 0000002c W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0704dc30 00000020 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0704dc30 00000020 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0704dc50 0000002c W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0704dc7c 0000002c W __gnu_cxx::__throw_concurrence_lock_error()
0704dca8 0000002c W __gnu_cxx::__throw_concurrence_unlock_error()
0704dcd4 0000002c W __gnu_cxx::__throw_concurrence_broadcast_error()
0704dd00 000001a4 T __cxa_guard_acquire
0704dea4 000000b0 T __cxa_guard_release
0704df54 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704df54 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704df74 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704dfa0 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
0704dfa0 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
0704dfb0 00000014 T std::get_new_handler()
0704dfc4 0000005c T operator new(unsigned int)
0704e020 0000001c T operator new(unsigned int, std::nothrow_t const&)
0704e03c 00000004 T operator new[](unsigned int)
0704e040 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704e040 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704e060 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704e08c 00000138 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0704e1c4 00000088 T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0704e24c 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0704e290 00000004 T std::type_info::~type_info()
0704e290 00000004 T std::type_info::~type_info()
0704e294 00000008 T std::type_info::__is_pointer_p() const
0704e294 00000008 T std::type_info::__is_function_p() const
0704e29c 00000014 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
0704e2b0 00000014 T std::__detail::_List_node_base::_M_unhook()
0704e2c4 00000058 T std::_Rb_tree_increment(std::_Rb_tree_node_base*)
0704e31c 00000070 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
0704e38c 00000284 T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
0704e610 0000002c T std::__throw_bad_alloc()
0704e63c 0000002c T std::__throw_bad_array_new_length()
0704e668 00000040 T std::__throw_logic_error(char const*)
0704e6a8 00000040 T std::__throw_invalid_argument(char const*)
0704e6e8 00000040 T std::__throw_length_error(char const*)
0704e728 00000040 T std::__throw_out_of_range(char const*)
0704e768 00000010 T std::__throw_out_of_range_fmt(char const*, ...)
0704e778 000000e4 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const
0704e860 000000e0 T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned int, unsigned int, unsigned int) const
0704e940 00000044 T std::_Sp_make_shared_tag::_S_eq(std::type_info const&)
0704e984 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
0704e9d8 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
0704e9fc 0000000c T std::bad_alloc::what() const
0704ea08 00000020 T std::bad_alloc::~bad_alloc()
0704ea08 00000020 T std::bad_alloc::~bad_alloc()
0704ea28 0000002c T std::bad_alloc::~bad_alloc()
0704ea54 0000000c T std::bad_array_new_length::what() const
0704ea60 00000020 T std::bad_array_new_length::~bad_array_new_length()
0704ea60 00000020 T std::bad_array_new_length::~bad_array_new_length()
0704ea80 0000002c T std::bad_array_new_length::~bad_array_new_length()
0704eaac 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0704eb08 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0704eb1c 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0704eb1c 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0704eb3c 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
0704eb68 00000064 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0704ebcc 0000007c T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0704ec48 000000d4 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0704ed1c 00000118 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
0704ee34 000000d4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
0704ef08 00000044 T __cxa_allocate_exception
0704ef4c 0000002c T __cxa_free_exception
0704ef78 000001b4 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
0704f12c T __cxa_end_cleanup
0704f13c 00000134 T __cxa_type_match
0704f270 000000b4 T __cxa_begin_cleanup
0704f324 000000b4 T __gnu_end_cleanup
0704f3d8 000000cc T __cxa_begin_catch
0704f4a4 000000e0 T __cxa_end_catch
0704f584 00000004 T std::exception::~exception()
0704f584 00000004 T std::exception::~exception()
0704f588 00000004 T std::bad_exception::~bad_exception()
0704f588 00000004 T std::bad_exception::~bad_exception()
0704f58c 0000000c T transaction clone for std::exception::what() const
0704f58c 0000000c T std::exception::what() const
0704f598 0000000c T transaction clone for std::bad_exception::what() const
0704f598 0000000c T std::bad_exception::what() const
0704f5a4 00000018 T std::bad_exception::~bad_exception()
0704f5bc 0000003c t eh_globals_dtor(void*)
0704f5f8 00000038 T __cxa_get_globals_fast
0704f630 00000074 T __cxa_get_globals
0704f6a4 00000040 t _GLOBAL__sub_I__ZN17__eh_globals_init7_S_initE
0704f6e4 00000034 t _GLOBAL__sub_D__ZN17__eh_globals_init7_S_initE
0704f718 0000016c t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
0704f884 00000058 t base_of_encoded_value(unsigned char, _Unwind_Context*)
0704f8dc 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
0704f9b4 000006a0 T __gxx_personality_v0
07050054 00000014 T __cxxabiv1::__terminate(void (*)())
07050068 00000018 T std::terminate()
07050080 0000000c T __cxxabiv1::__unexpected(void (*)())
0705008c 00000018 T std::unexpected()
070500a4 00000014 T std::get_terminate()
070500b8 00000014 T std::get_unexpected()
070500cc 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
0705012c 00000054 T __cxa_init_primary_exception
07050180 00000054 T __cxa_throw
070501d4 000000b0 T __cxa_rethrow
07050284 00000008 T std::logic_error::what() const
07050284 00000008 T std::runtime_error::what() const
0705028c 00000098 T std::logic_error::~logic_error()
0705028c 00000098 T std::logic_error::~logic_error()
07050324 00000098 T std::length_error::~length_error()
07050324 00000098 T std::length_error::~length_error()
070503bc 00000098 T std::invalid_argument::~invalid_argument()
070503bc 00000098 T std::invalid_argument::~invalid_argument()
07050454 00000098 T std::out_of_range::~out_of_range()
07050454 00000098 T std::out_of_range::~out_of_range()
070504ec 000000a0 T std::logic_error::~logic_error()
0705058c 000000a0 T std::length_error::~length_error()
0705062c 000000a0 T std::invalid_argument::~invalid_argument()
070506cc 000000a0 T std::out_of_range::~out_of_range()
0705076c 000000d4 T std::logic_error::logic_error(char const*)
0705076c 000000d4 T std::logic_error::logic_error(char const*)
07050840 00000020 T std::invalid_argument::invalid_argument(char const*)
07050840 00000020 T std::invalid_argument::invalid_argument(char const*)
07050860 00000020 T std::length_error::length_error(char const*)
07050860 00000020 T std::length_error::length_error(char const*)
07050880 00000020 T std::out_of_range::out_of_range(char const*)
07050880 00000020 T std::out_of_range::out_of_range(char const*)
070508a0 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
07050924 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
07050928 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
07050998 0000002c T __cxa_call_terminate
070509c4 00000150 T __cxa_call_unexpected
07050b18 0000027c T log2
07050d94 000000c0 T ceilf
07050e58 0000013c T ceil
07050f94 000000c0 T floorf
07051058 00000144 T floor
0705119c 00000068 T roundf
07051204 00000024 t with_errno
07051228 00000050 T __math_divzero
07051278 0000001c T __math_invalid
07051294 00000044 T __popcountsi2
070512d8 00000030 T __aeabi_f2lz
070512d8 00000030 T __fixsfdi
07051308 00000040 T __aeabi_f2ulz
07051308 00000040 T __fixunssfdi
07051348 00000120 T __udivmoddi4
07051468 00000018 t selfrel_offset31
07051480 00000090 t search_EIT_table
07051510 00000040 t __gnu_unwind_get_pr_addr
07051550 0000010c t get_eit_entry
0705165c 00000088 t restore_non_core_regs
070516e4 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
070516f8 00000004 t _Unwind_DebugHook
070516fc 00000064 t unwind_phase2
07051760 00000140 t unwind_phase2_forced
070518a0 000000a4 T __gnu_Unwind_RaiseException
07051944 00000028 T __gnu_Unwind_ForcedUnwind
0705196c 00000074 T __gnu_Unwind_Resume
070519e0 00000020 T __gnu_Unwind_Resume_or_Rethrow
07051a00 00000004 T _Unwind_Complete
07051a04 00000018 T _Unwind_DeleteException
07051a1c 0000006c T _Unwind_VRS_Get
07051a88 0000002c t _Unwind_GetGR
07051ab4 0000006c T _Unwind_VRS_Set
07051b20 0000002c t _Unwind_SetGR
07051b4c 000000c0 T __gnu_Unwind_Backtrace
07051c0c 00000410 t __gnu_unwind_pr_common
0705201c 00000008 T __aeabi_unwind_cpp_pr0
07052024 00000008 W __aeabi_unwind_cpp_pr1
0705202c 00000008 W __aeabi_unwind_cpp_pr2
07052034 00000424 T _Unwind_VRS_Pop
07052458 00000064 t next_unwind_byte
070524bc 0000002c t _Unwind_GetGR.constprop.0
070524e8 00000004 t unwind_UCB_from_context
070524ec 00000464 T __gnu_unwind_execute
07052950 00000048 T __gnu_unwind_frame
07052998 00000010 T _Unwind_GetRegionStart
070529a8 0000001c T _Unwind_GetLanguageSpecificData
070529c4 00000008 T _Unwind_GetDataRelBase
070529cc 00000008 T _Unwind_GetTextRelBase
070529d4 0000025c t _strtoull_l.isra.0
07052c30 00000030 T _strtoull_r
07052c60 00000020 T memalign
07052c80 0000014c T _memalign_r
07052dcc 00000014 T atexit
07052de0 000000cc T snprintf
07052eac 00000018 T isxdigit
07052ec4 00000064 T sprintf
07052f28 00000020 T calloc
07052f48 000000c0 T _calloc_r
07053008 000000f8 T _malloc_trim_r
07053100 000002e8 T _free_r
070533e8 00000018 T isspace
07053400 00000130 T strchr
07053530 000000d8 T memcmp
07053608 00000148 T _fclose_r
07053750 0000064c t get_arg
07053da0 00003324 T _svfprintf_r
070570c4 00000018 T malloc
070570dc 00000018 T free
070570f4 0000079c T _malloc_r
07057890 00000024 T getenv
070578b4 00000150 T memmove
07057a04 000000a4 T _vsnprintf_r
07057aa8 00000038 T vsnprintf
07057ae0 000000c8 T _findenv_r
07057ba8 00000018 T _getenv_r
07057bc0 000000f4 T memset
07057cb4 0000000c T __malloc_lock
07057cc0 0000000c T __malloc_unlock
07057ccc 00000090 T strlen
07057d5c 0000022c T __sflush_r
07057f88 00000094 T _fflush_r
0705801c 000000e4 T strncmp
07058100 00000070 T _fwalk_sglue
07058170 00000020 T localtime
07058190 000000c4 T strncpy
07058254 0000001c t stdio_exit_handler
07058270 0000005c t cleanup_stdio
070582cc 00000154 t global_stdio_init.part.0
07058420 0000005c T __sinit
0705847c 0000000c T __sfp_lock_acquire
07058488 0000000c T __sfp_lock_release
07058494 00000360 T localtime_r
070587f4 00000010 T ctime
07058804 00000048 T strnlen
0705884c 00000064 t sulp
070588b0 000013a4 T _strtod_l
07059c58 00000108 T strtof
07059d60 00000010 T _tzset_unlocked
07059d70 00000664 T _tzset_unlocked_r
0705a3d4 00000020 T realloc
0705a3f4 0000012c t iso_year_adjust
0705a520 0000126c t __strftime.isra.0
0705b78c 00000030 T strftime
0705b7bc 0000000c T __gettzinfo
0705b7c8 000001d8 t _strtoul_l.isra.0
0705b9a0 00000030 T _strtoul_r
0705b9d0 00000034 T strtoul
0705ba04 00000024 T __locale_mb_cur_max
0705ba28 0000004c T time
0705ba74 00000024 T _localeconv_r
0705ba98 00000254 T __tzcalc_limits
0705bcec 000000f0 T strcpy
0705bddc 000000e0 T memchr
0705bebc 000000f0 T __utf8_wctomb
0705bfac 0000011c T memcpy
0705c0c8 00000084 T __libc_init_array
0705c14c 0000000c T __errno
0705c158 00000010 T nan
0705c168 0000000c T nanf
0705c178 00000088 T frexp
0705c200 0000012c T __smakebuf_r
0705c32c 000000a0 T _wcrtomb_r
0705c3cc 00000028 T _wcsrtombs_r
0705c3f4 000000b0 T __register_exitproc
0705c4a4 0000000c T abs
0705c4b0 00000044 T __sread
0705c4f4 00000008 T __seofread
0705c4fc 00000068 T __swrite
0705c564 00000044 T __sseek
0705c5a8 00000008 T __sclose
0705c5b0 00000074 T siscanf
0705c624 0000000c T __env_lock
0705c630 0000000c T __env_unlock
0705c63c 000000cc T sniprintf
0705c708 0000064c t get_arg
0705cd54 0000018c T __ssprint_r
0705cee0 00002230 T _svfiprintf_r
0705f110 00000050 t get_arg
0705f160 000000e0 T _sungetc_r
0705f240 0000006c T __ssrefill_r
0705f2ac 000000c4 T _sfread_r
0705f370 000022cc T __ssvfiscanf_r
0706163c 0000000c T labs
07061648 000000f0 t rshift
07061738 0000089c T __gethex
07061fd4 000001b4 t quorem
07062188 00001218 T _dtoa_r
070633a0 0000004c T __match
070633ec 0000029c T __hexnan
07063688 00000088 T _Balloc
07063710 0000001c T _Bfree
0706372c 000000f4 T __multadd
07063820 00000110 T __s2b
07063930 00000060 T __hi0bits
07063990 0000009c T __lo0bits
07063a2c 000000a4 T __i2b
07063ad0 00000204 T __multiply
07063cd4 00000128 T __pow5mult
07063dfc 00000140 T __lshift
07063f3c 00000058 T __mcmp
07063f94 000001fc T __mdiff
07064190 00000068 T __ulp
070641f8 000000d0 T __b2d
070642c8 00000124 T __d2b
070643ec 00000078 T __ratio
07064464 00000088 T __copybits
070644ec 0000005c T __any_on
07064548 00000020 T asctime
07064568 00000268 T gmtime_r
070647d0 00000080 T asctime_r
07064850 000004a0 T _realloc_r
07064cf0 0000000c T __tz_lock
07064cfc 0000000c T __tz_unlock
07064d08 000002f8 T __utf8_mbtowc
07065000 000001b0 t _strtol_l.part.0
070651b0 00000060 T _strtol_r
07065210 00000234 t _strtoll_l.isra.0
07065444 00000030 T _strtoll_r
07065474 00000008 T iswspace
0706547c 000000b4 T _mbrtowc_r
07065530 00000038 T iswspace_l
07065568 00000188 T _wcsnrtombs_l
070656f0 00000064 T _wcsnrtombs_r
07065754 000000f0 T __sccl
07065844 00000064 T siprintf
070658a8 000000a8 T __submore
07065950 00000090 T category
070659e0 0000005c T __assert_func
07065a3c 0000003c T fiprintf
07065a78 0000064c t get_arg
070660c4 00000030 T __sprint_r
070660f4 00002304 T _vfiprintf_r
070683f8 000000b8 t __sbprintf
070684b0 00000138 T __swsetup_r
070685e8 000004b4 T __sfvwrite_r
07068a9c 00000078 T _fstat_r
07068b14 0000002c T __getreent
07068b40 00000030 T _gettimeofday_r
07068b70 0000003c T __get_handle
07068bac 000000f4 T _close_r
07068ca0 00000008 t null_write
07068ca8 00000008 T _isatty_r
07068cb0 00000084 T _lseek_r
07068d34 00000080 T _read_r
07068db4 00000078 W _sbrk_r
07068e2c 0000001c T __libc_lock_acquire
07068e48 0000001c T __libc_lock_release
07068e64 0000001c T __libc_lock_acquire_recursive
07068e80 0000001c T __libc_lock_release_recursive
07068e9c 00000080 T _write_r
07068f1c 00000038 T __aeabi_d2lz
07068f1c 00000038 T __fixdfdi
07068f58 00000040 T __aeabi_d2ulz
07068f58 00000040 T __fixunsdfdi
07068f98 T _fini
0706926f 00000a00 r font
07069e3c 00000058 r CTRPluginFramework::g_OSDPattern
0706a0d4 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
0706a0ec 0000001c V vtable for std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>
0706a108 00000008 V std::_Sp_make_shared_tag::_S_ti()::__tag
0706a120 00000004 R CTRPluginFramework::Color::SkyBlue
0706a124 00000004 R CTRPluginFramework::Color::Orange
0706a128 00000004 R CTRPluginFramework::Color::LimeGreen
0706a12c 00000004 R CTRPluginFramework::Color::ForestGreen
0706a130 00000004 R CTRPluginFramework::Color::Gainsboro
0706a134 00000004 R CTRPluginFramework::Color::DimGrey
0706a138 00000004 R CTRPluginFramework::Color::DeepSkyBlue
0706a13c 00000004 R CTRPluginFramework::Color::DarkGrey
0706a140 00000004 R CTRPluginFramework::Color::Brown
0706a144 00000004 R CTRPluginFramework::Color::BlackGrey
0706a148 00000004 R CTRPluginFramework::Color::Green
0706a14c 00000004 R CTRPluginFramework::Color::Gray
0706a150 00000004 R CTRPluginFramework::Color::Silver
0706a154 00000004 R CTRPluginFramework::Color::Magenta
0706a158 00000004 R CTRPluginFramework::Color::Cyan
0706a15c 00000004 R CTRPluginFramework::Color::Yellow
0706a160 00000004 R CTRPluginFramework::Color::Blue
0706a164 00000004 R CTRPluginFramework::Color::Red
0706a168 00000004 R CTRPluginFramework::Color::White
0706a16c 00000004 R CTRPluginFramework::Color::Black
0706a3a0 00000014 r CTRPluginFramework::defaultSoundFiles
0706a3c8 00000014 V vtable for CTRPluginFramework::MenuItem
0706a3dc 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
0706aa8d 000000c9 V std::__detail::__to_chars_10_impl<unsigned long>(char*, unsigned int, unsigned long)::__digits
0706ab56 000000c9 V std::__detail::__to_chars_10_impl<unsigned int>(char*, unsigned int, unsigned int)::__digits
0706ac1f 00000023 r CTRPluginFramework::g_copyrightText
0706ac42 0000001e r CTRPluginFramework::g_ctrpfText
0706ade0 00000020 R vtable for CTRPluginFramework::HexEditor::ByteView
0706ae00 00000020 R vtable for CTRPluginFramework::HexEditor::IntegerView
0706ae20 00000020 R vtable for CTRPluginFramework::HexEditor::AsmView
0706ae7c 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
0706ae84 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
0706aea0 0000001c R vtable for CTRPluginFramework::MenuEntryTools
0706b028 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
0706b030 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
0706b230 0000001c R vtable for CTRPluginFramework::TouchKey
0706b24c 0000001c R vtable for CTRPluginFramework::ComboBox
0706b268 0000001c R vtable for CTRPluginFramework::FloatingButton
0706b290 0000001c R vtable for CTRPluginFramework::Button
0706b2b0 00000008 r CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
0706b2b8 0000001c R vtable for CTRPluginFramework::TextBox
0706b2d4 0000001c R vtable for CTRPluginFramework::NumericTextBox
0706b768 00000040 r RegNames
0706b7a8 00000010 r shift_names
0706b7b8 00000040 r cond_names
0706b854 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
0706c0d4 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
0706c0dc 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
0706c0e4 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
0706c0ec 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
0706c100 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
0706c10c 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
0706c190 00000008 R CTRPluginFramework::Time::Zero
0706c20e 00000384 r Settings15_array
0706c592 00000384 r UnCheckedCheckbox_array
0706c916 00000384 r Unsplash15_array
0706cc9a 000009c4 r Plus25_array
0706d65e 000009c4 r GameControllerFilled25_array
0706e022 00000384 r About15_array
0706e3a6 000009c4 r Cut25_array
0706ed6a 00000640 r CloseWindow20_array
0706f3aa 00000384 r Controller15_array
0706f72e 00000384 r ClearSymbolFilled15_array
0706fab2 000009c4 r ClipboardFilled25_array
07070476 00000384 r EnterKeyFilled15_array
070707fa 000009c4 r CutFilled25_array
070711be 00000e10 r DefaultKeyboardCustomIcon_array
07071fce 00000384 r Search15_array
07072352 00000384 r CapsLockOn15_array
070726d6 000009c4 r TrashFilled25_array
0707309a 00000384 r RAM15_array
0707341e 00000384 r More15_array
070737a2 000009c4 r InfoFilled25_array
07074166 00000640 r CloseWindowFilled20_array
070747a6 00000384 r HandCursor15_array
07074b2a 000009c4 r AddFavoriteFilled25_array
070754ee 00000384 r EnterKey15_array
07075872 000009c4 r Duplicate25_array
07076236 00000384 r File15_array
070765ba 000009c4 r AddFavorite25_array
07076f7e 000009c4 r Edit25_array
07077942 000009c4 r DuplicateFilled25_array
07078306 000009c4 r Save25_array
07078cca 000009c4 r Clipboard25_array
0707968e 000009c4 r Info25_array
0707a052 000009c4 r EditFilled25_array
0707aa16 000009c4 r KeyboardFilled25_array
0707b3da 000009c4 r PlusFilled25_array
0707bd9e 00000384 r ClearSymbol15_array
0707c122 00000384 r Shutdown15_array
0707c4a6 00000384 r Maintenance15_array
0707c82a 00000384 r CheckedCheckbox_array
0707cbae 00000384 r Grid15_array
0707cf32 000009c4 r Keyboard25_array
0707d8f6 00000384 r CapsLockOnFilled15_array
0707dc7a 00000384 r UserManualFilled15_array
0707dffe 000009c4 r Trash25_array
0707e9c2 00000384 r GameController15_array
0707ed46 00000384 r Star15_array
0707f0ca 000009c4 r GameController25_array
0707fa8e 00001900 r Rocket40_array
0708138e 00000384 r FolderFilled_array
07081712 00000384 r Restart15_array
07081ac0 00000038 R vtable for CTRPluginFramework::Search32
07081b60 00000038 R vtable for CTRPluginFramework::Search
07081d7c 00000038 r CTRPluginFramework::stable
07081db4 00000038 r CTRPluginFramework::ktable
07081f48 00000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
07081f70 0000000c V typeinfo for __gnu_cxx::__concurrence_lock_error
07081f7c 00000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
07081fa8 0000000c V typeinfo for __gnu_cxx::__concurrence_unlock_error
07081fb4 0000002c V typeinfo name for __gnu_cxx::__concurrence_broadcast_error
07081fe0 0000000c V typeinfo for __gnu_cxx::__concurrence_broadcast_error
07081fec 00000027 V typeinfo name for __gnu_cxx::__concurrence_wait_error
07082014 0000000c V typeinfo for __gnu_cxx::__concurrence_wait_error
07082020 00000014 V vtable for __gnu_cxx::__concurrence_lock_error
07082034 00000014 V vtable for __gnu_cxx::__concurrence_unlock_error
07082048 00000014 V vtable for __gnu_cxx::__concurrence_broadcast_error
0708205c 00000014 V vtable for __gnu_cxx::__concurrence_wait_error
07082070 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
07082094 0000000c R typeinfo for __gnu_cxx::recursive_init_error
070820a0 00000014 R vtable for __gnu_cxx::recursive_init_error
070820b4 00000001 R std::nothrow
070820b8 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
070820e0 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
070820ec 0000002c R vtable for __cxxabiv1::__si_class_type_info
07082118 0000000d R typeinfo name for std::type_info
07082128 00000008 R typeinfo for std::type_info
07082130 0000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const::__fast_bkt
07082140 00000404 R std::__detail::__prime_list
07082544 00000018 V typeinfo name for std::_Sp_make_shared_tag
07082584 0000000d R typeinfo name for std::bad_alloc
07082594 0000000c R typeinfo for std::bad_alloc
070825a0 00000014 R vtable for std::bad_alloc
070825d0 00000019 R typeinfo name for std::bad_array_new_length
070825ec 0000000c R typeinfo for std::bad_array_new_length
070825f8 00000014 R vtable for std::bad_array_new_length
0708260c 00000022 R typeinfo name for __cxxabiv1::__class_type_info
07082630 0000000c R typeinfo for __cxxabiv1::__class_type_info
0708263c 0000002c R vtable for __cxxabiv1::__class_type_info
070826c8 0000000d R typeinfo name for std::exception
070826d8 00000008 R typeinfo for std::exception
070826e0 00000012 R typeinfo name for std::bad_exception
070826f4 0000000c R typeinfo for std::bad_exception
07082700 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
07082720 00000008 R typeinfo for __cxxabiv1::__forced_unwind
07082728 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0708274c 00000008 R typeinfo for __cxxabiv1::__foreign_exception
07082754 00000014 R vtable for std::bad_exception
07082768 00000010 R typeinfo name for std::logic_error
07082778 0000000c R typeinfo for std::logic_error
07082784 00000015 R typeinfo name for std::invalid_argument
0708279c 0000000c R typeinfo for std::invalid_argument
070827a8 00000011 R typeinfo name for std::length_error
070827bc 0000000c R typeinfo for std::length_error
070827c8 00000011 R typeinfo name for std::out_of_range
070827dc 0000000c R typeinfo for std::out_of_range
070827e8 00000014 R vtable for std::logic_error
070827fc 00000014 R vtable for std::invalid_argument
07082810 00000014 R vtable for std::length_error
07082824 00000014 R vtable for std::out_of_range
07082880 00000890 R __log2_data
07083110 00000101 R _ctype_
0708324c 00000010 r zeroes.0
0708325c 00000010 r blanks.1
07083280 00000014 r fpinan.0
07083294 00000014 r fpi.1
070832a8 00000028 r tinytens
07083338 00000060 R __month_lengths
070835c4 000000fc R _C_time_locale
070836c0 00000010 r zeroes.0
070836d0 00000010 r blanks.1
070836e0 0000006c R __action_table
0708374c 0000006c R __state_table
070837b8 00000100 R __chclass
070838b8 00000022 r basefix.0
0708393c 00000100 R __hexdig
07083ad8 0000000c r p05.0
07083ae8 00000028 R __mprec_bigtens
07083b10 000000c8 R __mprec_tens
07083bf8 00000024 r mon_name.0
07083c1c 00000015 r day_name.1
07083c34 00003528 r categories
0708719c 00000010 r zeroes.0
070871ac 00000010 r blanks.1
070871c4 00000080 R dotab_stdnull
07087244 R __tdata_align
070873a4 R __exidx_start
070875dc R __exidx_end
070875dc 00000004 D cwavCurrentVAPAConvCallback
070875e0 00000004 D CTRPluginFramework::Screenshot::Screens
070875e4 00000004 D CTRPluginFramework::Screenshot::Hotkeys
070875e8 00000001 D CTRPluginFramework::SystemImpl::Language
070875ec 00000004 D CTRPluginFramework::RendererPriv::g_customColor
070875f0 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
070875f4 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
070875f8 00000004 D CTRPluginFramework::FwkSettings::Header
070875fc 00000001 D CTRPluginFramework::g_keepRunning
07087600 00000004 D g_charPerSheet
07087604 00000001 d CTRPluginFrameworkImpl::Services::GSP::RunInterruptReceiver
07087605 00000001 D CTRPluginFramework::EventManager::_refresh
07087608 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
0708760c 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
07087610 000001f4 D opcode_names
07087804 00000018 d CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708781c 00000004 D Settings15
07087820 00000004 D UnCheckedCheckbox
07087824 00000004 D Unsplash15
07087828 00000004 D Plus25
0708782c 00000004 D GameControllerFilled25
07087830 00000004 D About15
07087834 00000004 D Cut25
07087838 00000004 D CloseWindow20
0708783c 00000004 D Controller15
07087840 00000004 D ClearSymbolFilled15
07087844 00000004 D ClipboardFilled25
07087848 00000004 D EnterKeyFilled15
0708784c 00000004 D CutFilled25
07087850 00000004 D DefaultKeyboardCustomIcon
07087854 00000004 D Search15
07087858 00000004 D CapsLockOn15
0708785c 00000004 D TrashFilled25
07087860 00000004 D RAM15
07087864 00000004 D More15
07087868 00000004 D InfoFilled25
0708786c 00000004 D CloseWindowFilled20
07087870 00000004 D HandCursor15
07087874 00000004 D AddFavoriteFilled25
07087878 00000004 D EnterKey15
0708787c 00000004 D Duplicate25
07087880 00000004 D File15
07087884 00000004 D AddFavorite25
07087888 00000004 D Edit25
0708788c 00000004 D DuplicateFilled25
07087890 00000004 D Save25
07087894 00000004 D Clipboard25
07087898 00000004 D Info25
0708789c 00000004 D EditFilled25
070878a0 00000004 D KeyboardFilled25
070878a4 00000004 D PlusFilled25
070878a8 00000004 D ClearSymbol15
070878ac 00000004 D Shutdown15
070878b0 00000004 D Maintenance15
070878b4 00000004 D CheckedCheckbox
070878b8 00000004 D Grid15
070878bc 00000004 D Keyboard25
070878c0 00000004 D CapsLockOnFilled15
070878c4 00000004 D UserManualFilled15
070878c8 00000004 D Trash25
070878cc 00000004 D GameController15
070878d0 00000004 D Star15
070878d4 00000004 D GameController25
070878d8 00000004 D Rocket40
070878dc 00000004 D FolderFilled
070878e0 00000004 D Restart15
070878e4 00000004 d kCount
070878e8 00000004 d kInterval
070878ec 00000004 d kDelay
070878f0 00000004 D __cxxabiv1::__unexpected_handler
070878f4 00000004 D __cxxabiv1::__terminate_handler
070878f8 00000004 D __malloc_sbrk_base
070878fc 00000004 D __malloc_trim_threshold
07087900 00000408 D __malloc_av_
07087d08 0000000c D __sglue
07087d14 00000008 D _tzname
07087d20 00000058 d tzinfo
07087d78 0000016c D __global_locale
07087ee4 00000004 D _impure_ptr
07087ee8 00000120 D _impure_data
07088008 00000004 D environ
0708800c 00001000 d handles
0708900c 0000000c d __stderr_handle
07089018 0000000c d __stdout_handle
07089024 0000000c d __stdin_handle
07089030 0000008c D devoptab_list
070890d0 d _GLOBAL_OFFSET_TABLE_
070890dc D __tdata_lma
070890e8 d __frame_dummy_init_array_entry
070890e8 D __init_array_start
070890e8 B __preinit_array_end
070890e8 B __preinit_array_start
070890e8 D __tdata_lma_end
07089150 d __do_global_dtors_aux_fini_array_entry
07089150 D __init_array_end
070891ac D __bss_start__
070891ac 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
070891b8 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
070891bc 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
070891c0 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
070891c4 00000004 b ncsndMutex
070891c8 00000004 b ncsndCmdCurOff
070891cc 00000004 b ncsndCmdStartOff
070891d0 00000004 B ncsndSharedMem
070891d4 00000004 B ncsndCSNDHandle
070891d8 00000004 B ncsndChannels
070891dc 00000004 b ncsndRefCount
070891e0 00000010 B ncsndOffsets
070891f0 00000004 B ncsndSharedMemSize
070891f4 00000004 b ncsndSharedMemBlock
070891f8 00000001 b ncsndCookieHooked
070891fc 0000000c b ncsndCookie
07089208 b saved_stack
07089210 00000004 b cwavListCount
07089214 00000004 b cwavList
07089218 00000004 b cwavAddedToList
0708921c b completed.1
07089220 b object.0
07089238 00000004 b CTRPluginFramework::isReady
0708923c 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
07089244 00000008 B CTRPluginFramework::Screenshot::_readyEvent
0708924c 00000008 B CTRPluginFramework::Screenshot::_task
07089258 00000008 B CTRPluginFramework::Screenshot::_hotkeyTimer
07089260 00000008 B CTRPluginFramework::Screenshot::_timer
07089268 00000004 B CTRPluginFramework::Screenshot::_display
0708926c 00000004 B CTRPluginFramework::Screenshot::_filecount
07089270 00000004 B CTRPluginFramework::Screenshot::_mode
07089274 00000004 B CTRPluginFramework::Screenshot::ScreenshotCallback
07089278 00000004 B CTRPluginFramework::Screenshot::ImgBuffer
0708927c 00000018 B CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
07089294 00000018 B CTRPluginFramework::Screenshot::Path[abi:cxx11]
070892b0 00000008 B CTRPluginFramework::Screenshot::Timer
070892b8 00000001 B CTRPluginFramework::Screenshot::IsEnabled
070892bc 00000008 b CTRPluginFramework::g_sleepEvent
070892c4 00000004 B CTRPluginFramework::SystemImpl::AptStatus
070892c8 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
070892cc 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
070892d0 00000001 B CTRPluginFramework::SystemImpl::IsCitra
070892d1 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
070892d2 00000001 B _g_isCitra
070892d4 00000004 B CTRPluginFramework::ScreenImpl::Bottom
070892d8 00000004 B CTRPluginFramework::ScreenImpl::Top
070892dc 000000ac b CTRPluginFramework::_botBuf
07089388 000000ac b CTRPluginFramework::_topBuf
07089434 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
07089438 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
07089440 00000050 b CTRPluginFramework::g_fpsCounter
07089490 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask2
07089498 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask1
070894a0 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
070894a8 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
070894b0 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
070894b8 00000001 B CTRPluginFramework::OSDImpl::WritesToPrevFB
070894b9 00000001 B CTRPluginFramework::OSDImpl::NeedToPauseFrame
070894ba 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
070894bc 00000020 B CTRPluginFramework::OSDImpl::previousFBAddr
070894dc 0000000c B CTRPluginFramework::OSDImpl::CallbacksTrashBin
070894e8 0000000c B CTRPluginFramework::OSDImpl::Callbacks
070894f4 0000000c B CTRPluginFramework::OSDImpl::Notifications
07089500 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
07089524 0000000c B CTRPluginFramework::OSDImpl::RecLock
07089530 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
07089548 00000018 B CTRPluginFramework::OSDImpl::TopScreen
07089560 00000004 B CTRPluginFramework::OSDImpl::OSDHook
07089564 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
07089568 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
0708956c 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
0708956d 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
0708956e 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
07089570 00000018 B CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
07089588 00000018 B CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
070895a0 00000018 B CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
070895b8 000000a8 B CTRPluginFramework::Preferences::Settings
07089660 00000008 B CTRPluginFramework::Preferences::Backlights
07089668 00000008 B CTRPluginFramework::Preferences::Flags
07089670 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
07089674 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
07089678 000009c4 b CTRPluginFramework::g_rng
0708a03c 00000001 B CTRPluginFramework::Process::ThrowOldExceptionOnCallbackException
0708a040 00000004 B CTRPluginFramework::Process::OnPauseResume
0708a044 00000004 B CTRPluginFramework::Process::exceptionCallback
0708a048 00000004 B CTRPluginFramework::System::OnAbort
0708a04c 00000004 B CTRPluginFramework::Controller::_keysReleased
0708a050 00000004 B CTRPluginFramework::Controller::_keysHeld
0708a054 00000004 B CTRPluginFramework::Controller::_keysDown
0708a058 00000004 b CTRPluginFramework::g_runningInstance
0708a05c 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708a060 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708a064 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708a066 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708a068 0000001c B CTRPluginFramework::Render::_randomSets[abi:cxx11]
0708a084 00000004 b g_onLoadCroLock
0708a088 00000004 b g_onSharedMemMapHook
0708a08c 00000004 b g_onLoadCroHook
0708a090 00000008 b CTRPluginFramework::g_mainThread
0708a098 00000004 B CTRPluginFramework::g_keepEvent
0708a09c 00000004 B CTRPluginFramework::g_keepThreadHandle
0708a0a0 00000004 B CTRPluginFramework::g_continueGameEvent
0708a0a8 00000008 B CTRPluginFramework::_sdmcArchive
0708a0b0 00001000 b CTRPluginFramework::keepThreadStack
0708b0b0 00000004 b g_mainThreadVars
0708b0b4 00000001 b properInit
0708b0b5 00000001 b fakeInit
0708b0b8 00000004 b plgLdrRefCount
0708b0bc 00000004 b plgReply
0708b0c0 00000004 b plgEvent
0708b0c4 00000004 b plgLdrArbiter
0708b0c8 00000004 b plgLdrHandle
0708b0cc 00000004 B CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThreadPriority
0708b0d0 00000004 B CTRPluginFrameworkImpl::Services::GSP::BufferFlags
0708b0d4 00000008 b CTRPluginFrameworkImpl::Services::GSP::SharedFrameBuffers
0708b0dc 00000008 b CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThread
0708b0e4 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPRegisterInterruptReceiverHook
0708b0e8 00000008 b CTRPluginFrameworkImpl::Services::GSP::Semaphore
0708b0f0 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank1Event
0708b0f8 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank0Event
0708b100 00000004 b CTRPluginFrameworkImpl::Services::GSP::WakeEvent
0708b104 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPEvent
0708b108 00000004 b CTRPluginFrameworkImpl::Services::GSP::EventData
0708b10c 00000004 b CTRPluginFrameworkImpl::Services::GSP::SharedMemoryBlock
0708b110 00000001 b CTRPluginFrameworkImpl::Services::GSP::CatchInterrupt
0708b114 0000001c B CTRPluginFramework::HookManager::_singleton
0708b130 000000a8 B CTRPluginFramework::Scheduler::_singleton
0708b1d8 00000008 b CTRPluginFramework::Heap::g_heapPool
0708b1e0 0000000c b CTRPluginFramework::Heap::_mutex
0708b1ec 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
0708b1f0 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
0708b1f4 0000000c b sAddrMap
0708b200 00000018 B CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
0708b218 0000000c B CTRPluginFramework::FSPath::FSMutex
0708b224 00000044 b CTRPluginFramework::g_previousException
0708b268 00000004 B CTRPluginFramework::ProcessImpl::processEventCallback
0708b26c 00000004 B CTRPluginFramework::ProcessImpl::exceptionCount
0708b270 00000008 B CTRPluginFramework::ProcessImpl::waitForExitEvent
0708b278 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
0708b284 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
0708b290 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
0708b2a0 00000004 B CTRPluginFramework::ProcessImpl::MainThreadTls
0708b2a4 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
0708b308 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
0708b30c 00000004 B CTRPluginFramework::ProcessImpl::MainThread
0708b310 00000008 B CTRPluginFramework::ProcessImpl::TitleId
0708b318 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
0708b31c 00000004 B CTRPluginFramework::ProcessImpl::Status
0708b320 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
0708b324 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
0708b328 00000004 B CTRPluginFramework::EventManager::_firstTouch
0708b32c 00000001 B CTRPluginFramework::EventManager::_isTouching
0708b330 00000004 B CTRPluginFramework::SoundEngineImpl::fallbackSound
0708b334 0000000c B CTRPluginFramework::SoundEngineImpl::menuSounds
0708b340 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
0708b344 0000000c B CTRPluginFramework::PluginMenuImpl::_trashBinMutex
0708b350 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
0708b354 00000004 B CTRPluginFramework::MenuItem::_uidCounter
0708b358 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
0708b35c 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
0708b360 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708b368 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708b370 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708b378 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708b380 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708b384 00000008 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708b38c 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708b390 00000008 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708b398 00000001 b CTRPluginFramework::g_manualScreenshotTrigger
0708b39c 00000004 b CTRPluginFramework::g_screenshotEntry
0708b3a0 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
0708b3a4 00000004 b CTRPluginFramework::g_OpenFileLock
0708b3a8 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
0708b3b0 00000040 b CTRPluginFramework::g_hookExportFile
0708b3f0 00000004 b CTRPluginFramework::g_HookMode
0708b3f4 00000004 b CTRPluginFramework::g_FsTryOpenFileHook
0708b3f8 00000008 b CTRPluginFramework::g_textXpos
0708b400 00000004 b CTRPluginFramework::g_mode
0708b404 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
0708b408 00000010 b CTRPluginFramework::SubMenu::Draw()::background
0708b418 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708b41c 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708b42c 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
0708b430 00000004 B CTRPluginFramework::__g_hexEditor
0708b434 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
0708b438 00000010 b CTRPluginFramework::GuideReader::Draw()::background
0708b448 00000001 b CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)::preventRecursion
0708b44c 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
0708b450 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708b458 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708b460 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708b464 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708b474 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708b478 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708b480 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708b484 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708b494 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708b498 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708b4a8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708b4ac 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708b4bc 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708b4c0 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708b4d0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708b4d4 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708b4e4 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
0708b4f0 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
0708b4fc 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
0708b508 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708b50c 00000008 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708b514 00000004 b CTRPluginFramework::__pmARinstance
0708b518 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
0708b51c 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
0708b52c 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
0708b530 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
0708b540 00000004 b CTRPluginFramework::g_radioId
0708b544 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
0708b548 00000010 B CTRPluginFramework::Icon::DefaultCustomIcon
0708b558 0000001c b CTRPluginFramework::(anonymous namespace)::defaultSysFont
0708b574 00000004 b CTRPluginFramework::(anonymous namespace)::defaultGlyph
0708b578 00000004 b CTRPluginFramework::(anonymous namespace)::glyph
0708b57c 0000000c B CTRPluginFramework::Font::_mutex
0708b588 00000004 B CTRPluginFramework::g_glyphAllocated
0708b58c 00000004 B CTRPluginFramework::g_fontAllocated
0708b590 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708b594 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708b5a0 00000028 B CTRPluginFramework::Window::TopWindow
0708b5c8 00000028 B CTRPluginFramework::Window::BottomWindow
0708b5f0 00000008 b CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask
0708b5f8 00000001 b CTRPluginFramework::(anonymous namespace)::HasGameResumed
0708b5f9 00000001 b CTRPluginFramework::(anonymous namespace)::IsForced
0708b5fc 0000000c b CTRPluginFramework::(anonymous namespace)::FrameLockingMutex
0708b608 0000000c B CTRPluginFramework::g_codeTypes
0708b614 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708b618 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708b624 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708b628 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708b634 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
0708b635 00000001 b CTRPluginFramework::g_newCondDataToggle
0708b636 00000001 b CTRPluginFramework::g_condAgainstData
0708b638 00000004 b CTRPluginFramework::__arCodeEditor
0708b63c 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708b640 00000018 b __threads
0708b658 0000000c b __mutex
0708b664 0000001c b CTRPluginFramework::g_dummy
0708b680 00000180 b CTRPluginFramework::g_keyName
0708b800 00000004 B CTRPluginFramework::_pool
0708b804 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708b808 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708b818 00000001 b CTRPluginFramework::g_progressLoop
0708b81c 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708b820 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708b828 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708b830 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708b838 00000004 b CTRPluginFramework::__converter
0708b83c 00000004 b CTRPluginFramework::g_context
0708b840 00000001 b CTRPluginFramework::ToggleFloat
0708b841 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
0708b844 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
0708b848 00000004 B CTRPluginFramework::ARHandler::ActiveData
0708b84c 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
0708b850 00000008 B CTRPluginFramework::ARHandler::Storage
0708b858 00000010 B CTRPluginFramework::ARHandler::Data
0708b868 00000008 B CTRPluginFramework::ARHandler::Offset
0708b870 00000fa0 b CTRPluginFramework::arStack
0708c810 00000004 b arbiter
0708c814 00000004 b sharedFontAddr
0708c818 00000004 B g_sharedFont
0708c81c 00000004 b srvRefCount
0708c820 00000004 b srvHandle
0708c824 00000004 b currentAddr
0708c828 00000004 b maxAddr
0708c82c 00000004 b minAddr
0708c830 00000004 b cfguRefCount
0708c834 00000004 b cfguHandle
0708c838 00000001 b gspRunEvents
0708c83c 00000004 b gspEventThread
0708c840 00000004 b gspEvent
0708c844 00000001 b gspGpuRight
0708c848 00000004 b gspSharedMem
0708c84c 00000004 b gspSharedMemHandle
0708c850 00000004 b gspRefCount
0708c854 00000004 b gspGpuHandle
0708c858 00000001 b usingIrrst
0708c85c 00000004 b hidRefCount
0708c860 00000006 b gRate
0708c868 00000006 b aVec
0708c870 00000004 b cPos
0708c874 00000004 b tPos
0708c878 00000004 b kRepeat
0708c87c 00000004 b kUp
0708c880 00000004 b kDown
0708c884 00000004 b kHeld
0708c888 00000004 b kOld
0708c88c 00000004 B hidSharedMem
0708c890 00000014 B hidEvents
0708c8a4 00000004 B hidMemHandle
0708c8a8 00000004 B hidHandle
0708c8ac 00000004 b acRefCount
0708c8b0 00000004 b acHandle
0708c8b4 00000004 b amRefCount
0708c8b8 00000004 b amHandle
0708c8bc 00000004 b __sslc_refcount
0708c8c0 00000004 B __sslc_servhandle
0708c8c4 00000001 b flagValue.0
0708c8c5 00000001 b flagInit.1
0708c8c8 00000004 b serviceName.6
0708c8cc 0000000c b aptFirstHook
0708c8d8 00000004 b aptLockHandle
0708c8dc 00000004 b srvPmHandle
0708c8e0 00000080 b fsExemptArchives
0708c960 00000004 b fsuRefCount
0708c964 00000004 b fsuHandle
0708c968 00000004 V __ctru_heap_size
0708c96c 00000004 B __ctru_linear_heap
0708c970 00000004 B __ctru_heap
0708c974 00000004 b irrstRefCount
0708c978 00000004 b csPos
0708c97c 00000004 b kHeld
0708c980 00000004 B irrstSharedMem
0708c984 00000004 B irrstEvent
0708c988 00000004 B irrstMemHandle
0708c98c 00000004 B irrstHandle
0708c990 00000004 b (anonymous namespace)::get_static_cond()::once
0708c998 00000008 b (anonymous namespace)::fake_cond
0708c9a0 00000004 b (anonymous namespace)::static_cond
0708c9a4 00000004 b (anonymous namespace)::get_static_mutex()::once
0708c9a8 00000010 b (anonymous namespace)::fake_mutex
0708c9b8 00000004 b (anonymous namespace)::static_mutex
0708c9bc 00000004 b (anonymous namespace)::__new_handler
0708c9c0 0000001c b (anonymous namespace)::emergency_pool
0708c9dc 00000004 b init
0708c9e0 00000001 B __eh_globals_init::_S_init
0708c9e4 0000000c b (anonymous namespace)::eh_globals
0708c9f0 00000010 V std::string::_Rep::_S_empty_rep_storage
0708ca00 00000028 B __malloc_current_mallinfo
0708ca28 00000004 B __malloc_max_total_mem
0708ca2c 00000004 B __malloc_max_sbrked_mem
0708ca30 00000004 B __malloc_top_pad
0708ca34 0000000c b __malloc_recursive_mutex
0708ca40 0000000c b __sfp_recursive_mutex
0708ca50 00000168 B __sf
0708cbb8 00000004 B __stdio_exit_handler
0708cbbc 00000004 b prev_tzenv
0708cbc0 0000000c b __tzname_dst
0708cbcc 0000000c b __tzname_std
0708cbd8 00000004 B _timezone
0708cbdc 00000004 B _daylight
0708cbe0 00000190 B __atexit0
0708cd70 00000004 B __atexit
0708cd74 0000000c B __atexit_recursive_mutex
0708cd80 00000004 b initial_env
0708cd84 0000000c b __env_recursive_mutex
0708cd90 00000004 b __tz_mutex
0708cd94 00000004 b __hndl_lock
0708cd98 00000004 B fake_heap_start
0708cd9c 00000004 B fake_heap_end
0708cda0 00000004 b heap_start.0
0708cda4 B __tls_start
0708cdd0 B __bss_end__
0708cdd0 A __end__
0708cdd0 B __tls_end
